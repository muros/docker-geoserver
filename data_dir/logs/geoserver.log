2016-05-09 14:08:04,100 INFO [org.geoserver] - Loaded style 'burg'
2016-05-09 14:08:04,103 INFO [org.geoserver] - Loaded style 'capitals'
2016-05-09 14:08:04,104 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-05-09 14:08:04,106 INFO [org.geoserver] - Loaded style 'dem'
2016-05-09 14:08:04,108 INFO [org.geoserver] - Loaded style 'generic'
2016-05-09 14:08:04,110 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-05-09 14:08:04,110 INFO [org.geoserver] - Loaded style 'grass'
2016-05-09 14:08:04,111 INFO [org.geoserver] - Loaded style 'green'
2016-05-09 14:08:04,112 INFO [org.geoserver] - Loaded style 'line'
2016-05-09 14:08:04,113 INFO [org.geoserver] - Loaded style 'poi'
2016-05-09 14:08:04,115 INFO [org.geoserver] - Loaded style 'point'
2016-05-09 14:08:04,117 INFO [org.geoserver] - Loaded style 'polygon'
2016-05-09 14:08:04,119 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-05-09 14:08:04,121 INFO [org.geoserver] - Loaded style 'pophatch'
2016-05-09 14:08:04,121 INFO [org.geoserver] - Loaded style 'population'
2016-05-09 14:08:04,123 INFO [org.geoserver] - Loaded style 'rain'
2016-05-09 14:08:04,126 INFO [org.geoserver] - Loaded style 'raster'
2016-05-09 14:08:04,128 INFO [org.geoserver] - Loaded style 'restricted'
2016-05-09 14:08:04,130 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-05-09 14:08:04,131 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-05-09 14:08:04,133 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-05-09 14:08:04,133 WARN [org.geoserver] - No default workspace was found.
2016-05-09 14:08:04,139 INFO [org.geoserver] - Loaded workspace 'cite'
2016-05-09 14:08:04,216 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-05-09 14:08:04,220 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-05-09 14:08:04,223 INFO [org.geoserver] - Loaded workspace 'sde'
2016-05-09 14:08:04,226 INFO [org.geoserver] - Loaded workspace 'sf'
2016-05-09 14:08:04,229 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-05-09 14:08:04,232 INFO [org.geoserver] - Loaded workspace 'topp'
2016-05-09 14:08:04,380 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-05-09 14:08:04,386 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-05-09 14:08:05,163 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-05-09 14:08:05,172 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-05-09 14:08:05,272 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-05-09 14:08:05,280 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-05-09 14:08:05,281 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-05-09 14:08:05,442 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-05-09 14:08:05,443 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-05-09 14:08:05,446 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-05-09 14:08:05,452 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-05-09 14:08:05,452 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-05-09 14:08:05,459 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-05-09 14:08:05,460 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-05-09 14:08:06,013 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\opt\geoserver-2.9-RC1\data_dir\coverages\mosaic_sample\sample_image
2016-05-09 14:08:06,014 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/opt/geoserver-2.9-RC1/data_dir/coverages/mosaic_sample/mosaic.shp
2016-05-09 14:08:06,047 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-05-09 14:08:06,054 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-05-09 14:08:06,054 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-05-09 14:08:06,060 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-05-09 14:08:06,061 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-05-09 14:08:06,088 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-05-09 14:08:06,182 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-05-09 14:08:06,185 INFO [org.geoserver] - Loaded data store 'sf'
2016-05-09 14:08:06,224 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-05-09 14:08:06,232 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:08:06,246 INFO [org.geoserver] - Loaded layer 'archsites'
2016-05-09 14:08:06,250 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-05-09 14:08:06,251 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:08:06,254 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-05-09 14:08:06,259 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-05-09 14:08:06,261 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:08:06,264 INFO [org.geoserver] - Loaded layer 'restricted'
2016-05-09 14:08:06,269 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-05-09 14:08:06,270 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:08:06,274 INFO [org.geoserver] - Loaded layer 'roads'
2016-05-09 14:08:06,279 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-05-09 14:08:06,280 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:08:06,283 INFO [org.geoserver] - Loaded layer 'streams'
2016-05-09 14:08:06,290 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-05-09 14:08:06,291 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-05-09 14:08:06,297 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-05-09 14:08:06,298 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-05-09 14:08:06,504 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-05-09 14:08:06,513 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-05-09 14:08:06,515 INFO [org.geoserver] - Loaded data store 'nyc'
2016-05-09 14:08:06,528 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-05-09 14:08:06,529 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:08:06,531 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-05-09 14:08:06,535 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-05-09 14:08:06,536 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:08:06,539 INFO [org.geoserver] - Loaded layer 'poi'
2016-05-09 14:08:06,543 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-05-09 14:08:06,544 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:08:06,547 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-05-09 14:08:06,552 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-05-09 14:08:06,553 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:08:06,557 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-05-09 14:08:06,568 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-05-09 14:08:06,570 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-05-09 14:08:06,579 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-05-09 14:08:06,580 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-05-09 14:08:06,587 INFO [org.geoserver] - Loaded layer 'states'
2016-05-09 14:08:06,594 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-05-09 14:08:06,596 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-05-09 14:08:06,608 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-05-09 14:08:06,612 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:08:06,618 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-05-09 14:08:06,621 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-05-09 14:08:06,622 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:08:06,624 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-05-09 14:08:06,627 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-05-09 14:08:06,628 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:08:06,631 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-05-09 14:08:06,640 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-05-09 14:08:06,642 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:08:06,645 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-05-09 14:08:06,654 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-05-09 14:08:06,657 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-05-09 14:08:06,658 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-05-09 14:08:06,709 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-09 14:08:06,725 WARN [config.XMLFileResourceProvider] - Found no configuration file in config directory, will create one at 'gwc/geowebcache.xml' from template jar:file:/C:/opt/geoserver-2.9-RC1/webapps/geoserver/WEB-INF/lib/gwc-core-1.9-RC1.jar!/geowebcache_empty.xml
2016-05-09 14:08:06,731 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:08:06,732 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:08:06,778 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-09 14:08:06,778 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2016-05-09 14:08:06,779 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2016-05-09 14:08:06,779 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-09 14:08:06,874 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-05-09 14:08:06,874 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2016-05-09 14:08:06,875 INFO [gwc.layer] - Loading tile layers from gwc-layers
2016-05-09 14:08:06,887 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-05-09 14:08:06,887 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2016-05-09 14:08:06,888 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2016-05-09 14:08:06,888 INFO [config.XMLConfiguration] - Initializing layers from gwc
2016-05-09 14:08:06,888 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2016-05-09 14:08:06,896 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************************
2016-05-09 14:08:06,897 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\opt\geoserver-2.9-RC1\data_dir, using it as the default prefix. ***
2016-05-09 14:08:06,897 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************************
2016-05-09 14:08:06,943 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-09 14:08:06,955 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-09 14:08:06,962 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-09 14:08:06,966 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-05-09 14:08:06,967 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-05-09 14:08:06,968 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500,0 MB
2016-05-09 14:08:06,980 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-05-09 14:08:07,023 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-05-09 14:08:07,043 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-05-09 14:08:07,054 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-05-09 14:08:07,068 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-05-09 14:08:07,433 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-05-09 14:08:07,457 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-05-09 14:08:07,467 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-05-09 14:08:07,508 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-05-09 14:08:07,601 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-05-09 14:08:07,622 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-05-09 14:08:07,623 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-05-09 14:08:07,646 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-09 14:08:08,635 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-05-09 14:08:08,635 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-05-09 14:08:08,636 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-05-09 14:08:08,713 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-05-09 14:08:08,713 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-05-09 14:08:08,720 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-05-09 14:08:08,780 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-05-09 14:08:08,781 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-05-09 14:08:09,560 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-05-09 14:08:09,560 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-05-09 14:08:09,561 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-05-09 14:08:12,099 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-05-09 14:08:12,100 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-05-09 14:08:12,149 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-05-09 14:08:12,149 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-05-09 14:08:12,240 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-05-09 14:08:12,241 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-05-09 14:08:12,637 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-05-09 14:08:12,641 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-05-09 14:08:58,254 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-05-09 14:09:03,386 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 14:09:03,388 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 14:09:09,511 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:09,827 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Height = 535
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@4cfda136]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[6.346 : 20.83, 36.492 : 46.591]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=6.346,36.492,20.83,46.591, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=535, LAYERS=nurc:mosaic}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:10,254 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:11,069 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 535
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@4cfda136]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[5.1416015625 : 22.0166015625, 35.672607421875 : 47.427978515625]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=5.1416015625,35.672607421875,22.0166015625,47.427978515625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=535, TRANSPARENT=true, LAYERS=nurc:mosaic}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:13,477 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:13,564 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 535
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@4cfda136]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[9.613037109375 : 18.050537109375, 39.1717529296875 : 45.0494384765625]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=9.613037109375,39.1717529296875,18.050537109375,45.0494384765625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=535, TRANSPARENT=true, LAYERS=nurc:mosaic}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:15,377 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:15,474 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 535
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@4cfda136]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-3.779296875 : 29.970703125, 28.67431640625 : 52.18505859375]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-3.779296875,28.67431640625,29.970703125,52.18505859375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=535, TRANSPARENT=true, LAYERS=nurc:mosaic}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:19,468 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:19,519 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Height = 384
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=giant_polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 90.0]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,90.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, LAYERS=tiger:giant_polygon}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:19,821 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:19,931 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 384
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=giant_polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-270.0 : 270.0, -135.0 : 135.0]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-270,-135,270,135, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=tiger:giant_polygon}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:22,328 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:22,343 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 384
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=giant_polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-112.1484375 : 157.8515625, -68.5546875 : 66.4453125]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-112.1484375,-68.5546875,157.8515625,66.4453125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=tiger:giant_polygon}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:30,332 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:30,371 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Height = 537
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:26713
	Styles = [StyleImpl[ name=simple_roads]]
	Layers = [org.geoserver.wms.MapLayerInfo@c37173d5]
	MaxFeatures = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Bbox = SRSEnvelope[589434.8564686741 : 609527.2102150217, 4914006.337837095 : 4928063.398014731]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:26713, FORMAT=application/openlayers, BBOX=589434.8564686741,4914006.337837095,609527.2102150217,4928063.398014731, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=537, LAYERS=sf:roads}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:30,586 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:30,750 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 538
	Width = 769
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:26713
	Styles = [StyleImpl[ name=simple_roads]]
	Layers = [org.geoserver.wms.MapLayerInfo@c37173d5]
	MaxFeatures = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Bbox = SRSEnvelope[584814.0149117766 : 614132.9759048079, 4910792.351276112 : 4931292.718532958]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:26713, BBOX=584814.0149117766,4910792.351276112,614132.9759048079,4931292.718532958, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=538, TRANSPARENT=true, LAYERS=sf:roads}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:32,264 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:32,305 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 538
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:26713
	Styles = [StyleImpl[ name=simple_roads]]
	Layers = [org.geoserver.wms.MapLayerInfo@c37173d5]
	MaxFeatures = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Bbox = SRSEnvelope[592620.9517907805 : 607280.432287296, 4915726.5644380255 : 4925976.748066449]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:26713, BBOX=592620.9517907805,4915726.5644380255,607280.432287296,4925976.748066449, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=538, TRANSPARENT=true, LAYERS=sf:roads}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:32,846 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:32,865 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 537
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:26713
	Styles = [StyleImpl[ name=simple_roads]]
	Layers = [org.geoserver.wms.MapLayerInfo@c37173d5]
	MaxFeatures = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Bbox = SRSEnvelope[596524.4202302824 : 603854.1604785401, 4918250.934614672 : 4923376.026428883]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:26713, BBOX=596524.4202302824,4918250.934614672,603854.1604785401,4923376.026428883, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=537, TRANSPARENT=true, LAYERS=sf:roads}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:33,652 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:33,668 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 538
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:26713
	Styles = [StyleImpl[ name=simple_roads]]
	Layers = [org.geoserver.wms.MapLayerInfo@c37173d5]
	MaxFeatures = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Bbox = SRSEnvelope[598476.1544500332 : 602141.0245741621, 4919513.119702994 : 4922075.6656101]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:26713, BBOX=598476.1544500332,4919513.119702994,602141.0245741621,4922075.6656101, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=538, TRANSPARENT=true, LAYERS=sf:roads}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:09:34,577 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:09:34,632 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 538
	Width = 769
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:26713
	Styles = [StyleImpl[ name=simple_roads]]
	Layers = [org.geoserver.wms.MapLayerInfo@c37173d5]
	MaxFeatures = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Bbox = SRSEnvelope[584814.0149117766 : 614132.9759048079, 4910677.824084733 : 4931178.191341579]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:26713, BBOX=584814.0149117766,4910677.824084733,614132.9759048079,4931178.191341579, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=538, TRANSPARENT=true, LAYERS=sf:roads}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:10:34,036 INFO [org.geoserver] - Loaded style 'burg'
2016-05-09 14:10:34,038 INFO [org.geoserver] - Loaded style 'capitals'
2016-05-09 14:10:34,039 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-05-09 14:10:34,040 INFO [org.geoserver] - Loaded style 'dem'
2016-05-09 14:10:34,042 INFO [org.geoserver] - Loaded style 'generic'
2016-05-09 14:10:34,043 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-05-09 14:10:34,044 INFO [org.geoserver] - Loaded style 'grass'
2016-05-09 14:10:34,044 INFO [org.geoserver] - Loaded style 'green'
2016-05-09 14:10:34,046 INFO [org.geoserver] - Loaded style 'line'
2016-05-09 14:10:34,047 INFO [org.geoserver] - Loaded style 'poi'
2016-05-09 14:10:34,048 INFO [org.geoserver] - Loaded style 'point'
2016-05-09 14:10:34,049 INFO [org.geoserver] - Loaded style 'polygon'
2016-05-09 14:10:34,050 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-05-09 14:10:34,050 INFO [org.geoserver] - Loaded style 'pophatch'
2016-05-09 14:10:34,052 INFO [org.geoserver] - Loaded style 'population'
2016-05-09 14:10:34,053 INFO [org.geoserver] - Loaded style 'rain'
2016-05-09 14:10:34,054 INFO [org.geoserver] - Loaded style 'raster'
2016-05-09 14:10:34,054 INFO [org.geoserver] - Loaded style 'restricted'
2016-05-09 14:10:34,055 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-05-09 14:10:34,056 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-05-09 14:10:34,057 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-05-09 14:10:34,059 INFO [org.geoserver] - Loaded default workspace cite
2016-05-09 14:10:34,061 INFO [org.geoserver] - Loaded workspace 'cite'
2016-05-09 14:10:34,063 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-05-09 14:10:34,066 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-05-09 14:10:34,068 INFO [org.geoserver] - Loaded workspace 'sde'
2016-05-09 14:10:34,070 INFO [org.geoserver] - Loaded workspace 'sf'
2016-05-09 14:10:34,071 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-05-09 14:10:34,072 INFO [org.geoserver] - Loaded workspace 'topp'
2016-05-09 14:10:34,081 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-05-09 14:10:34,082 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-05-09 14:10:34,111 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-05-09 14:10:34,113 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-05-09 14:10:34,117 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-05-09 14:10:34,123 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-05-09 14:10:34,124 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-05-09 14:10:34,147 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-05-09 14:10:34,148 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-05-09 14:10:34,150 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-05-09 14:10:34,156 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-05-09 14:10:34,156 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-05-09 14:10:34,159 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-05-09 14:10:34,159 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-05-09 14:10:34,168 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\opt\geoserver-2.9-RC1\data_dir\coverages\mosaic_sample\sample_image
2016-05-09 14:10:34,168 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/opt/geoserver-2.9-RC1/data_dir/coverages/mosaic_sample/mosaic.shp
2016-05-09 14:10:34,173 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-05-09 14:10:34,179 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-05-09 14:10:34,180 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-05-09 14:10:34,182 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-05-09 14:10:34,183 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-05-09 14:10:34,188 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-05-09 14:10:34,198 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-05-09 14:10:34,198 INFO [org.geoserver] - Loaded data store 'sf'
2016-05-09 14:10:34,223 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-05-09 14:10:34,224 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:10:34,228 INFO [org.geoserver] - Loaded layer 'archsites'
2016-05-09 14:10:34,231 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-05-09 14:10:34,233 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:10:34,236 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-05-09 14:10:34,239 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-05-09 14:10:34,240 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:10:34,242 INFO [org.geoserver] - Loaded layer 'restricted'
2016-05-09 14:10:34,245 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-05-09 14:10:34,246 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:10:34,249 INFO [org.geoserver] - Loaded layer 'roads'
2016-05-09 14:10:34,251 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-05-09 14:10:34,252 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:10:34,253 INFO [org.geoserver] - Loaded layer 'streams'
2016-05-09 14:10:34,259 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-05-09 14:10:34,260 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-05-09 14:10:34,263 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-05-09 14:10:34,264 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-05-09 14:10:34,275 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-05-09 14:10:34,283 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-05-09 14:10:34,284 INFO [org.geoserver] - Loaded data store 'nyc'
2016-05-09 14:10:34,295 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-05-09 14:10:34,296 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:10:34,299 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-05-09 14:10:34,301 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-05-09 14:10:34,301 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:10:34,303 INFO [org.geoserver] - Loaded layer 'poi'
2016-05-09 14:10:34,305 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-05-09 14:10:34,306 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:10:34,308 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-05-09 14:10:34,309 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-05-09 14:10:34,310 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:10:34,312 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-05-09 14:10:34,320 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-05-09 14:10:34,322 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-05-09 14:10:34,329 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-05-09 14:10:34,330 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-05-09 14:10:34,335 INFO [org.geoserver] - Loaded layer 'states'
2016-05-09 14:10:34,341 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-05-09 14:10:34,342 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-05-09 14:10:34,355 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-05-09 14:10:34,355 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:10:34,358 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-05-09 14:10:34,359 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-05-09 14:10:34,360 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:10:34,362 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-05-09 14:10:34,364 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-05-09 14:10:34,364 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:10:34,366 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-05-09 14:10:34,368 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-05-09 14:10:34,369 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:10:34,371 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-05-09 14:10:34,372 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-05-09 14:10:34,374 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-05-09 14:10:34,376 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-05-09 14:10:34,389 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-05-09 14:10:34,394 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-05-09 14:10:34,398 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-05-09 14:10:34,401 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2016-05-09 14:10:34,402 INFO [gwc.layer] - Loading tile layers from gwc-layers
2016-05-09 14:10:34,424 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-05-09 14:10:34,425 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2016-05-09 14:10:34,427 INFO [gwc.layer] - Loading tile layers from gwc-layers
2016-05-09 14:10:34,458 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-05-09 14:10:34,458 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:10:34,459 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:10:34,459 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:10:34,494 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-09 14:10:34,495 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2016-05-09 14:10:34,495 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2016-05-09 14:10:34,496 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-09 14:10:34,501 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2016-05-09 14:10:34,501 INFO [config.XMLConfiguration] - Initializing layers from gwc
2016-05-09 14:10:34,502 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2016-05-09 14:10:34,507 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-09 14:10:34,507 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-09 14:10:34,508 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2016-05-09 14:10:34,508 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2016-05-09 14:10:34,509 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2016-05-09 14:10:34,509 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2016-05-09 14:10:34,509 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2016-05-09 14:10:34,511 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2016-05-09 14:10:34,511 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-09 14:10:34,512 INFO [diskquota.DiskQuotaMonitor] - Shutting down clean up executor service...
2016-05-09 14:10:34,513 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-05-09 14:10:34,513 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-05-09 14:10:34,513 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500,0 MB
2016-05-09 14:10:34,515 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-05-09 14:11:01,825 INFO [geoserver.web] - Connection to store img_sample2 validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader. Saving store
2016-05-09 14:11:04,179 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 14:11:04,181 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 14:11:09,492 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:09,523 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Height = 372
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@c97f85a]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-130.85168 : -62.0054, 20.7052 : 54.1141]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-130.85168,20.7052,-62.0054,54.1141, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=372, LAYERS=nurc:Img_Sample}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:09,790 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:09,808 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 372
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@c97f85a]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-164.00390625 : -29.00390625, 4.74609375 : 70.13671875]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-164.00390625,4.74609375,-29.00390625,70.13671875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=372, TRANSPARENT=true, LAYERS=nurc:Img_Sample}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:11,182 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:11,204 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 372
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@c97f85a]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-127.880859375 : -60.380859375, 18.896484375 : 51.591796875]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-127.880859375,18.896484375,-60.380859375,51.591796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=372, TRANSPARENT=true, LAYERS=nurc:Img_Sample}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:11,716 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:11,730 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 372
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@c97f85a]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-109.8193359375 : -76.0693359375, 25.9716796875 : 42.3193359375]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-109.8193359375,25.9716796875,-76.0693359375,42.3193359375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=372, TRANSPARENT=true, LAYERS=nurc:Img_Sample}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:12,416 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:12,426 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 372
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@c97f85a]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-100.78857421875 : -83.91357421875, 29.50927734375 : 37.68310546875]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-100.78857421875,29.50927734375,-83.91357421875,37.68310546875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=372, TRANSPARENT=true, LAYERS=nurc:Img_Sample}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:13,036 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:13,049 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 372
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@c97f85a]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-96.273193359375 : -87.835693359375, 31.278076171875 : 35.364990234375]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-96.273193359375,31.278076171875,-87.835693359375,35.364990234375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=372, TRANSPARENT=true, LAYERS=nurc:Img_Sample}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:13,920 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:13,932 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/jpeg
	Filter = null
	Filters = null
	Height = 372
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@c97f85a]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-94.0155029296875 : -89.7967529296875, 32.1624755859375 : 34.2059326171875]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-94.0155029296875,32.1624755859375,-89.7967529296875,34.2059326171875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=372, TRANSPARENT=true, LAYERS=nurc:Img_Sample}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:21,767 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:21,785 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 384
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=giant_polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-185.625 : 84.375, -62.9296875 : 72.0703125]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-185.625,-62.9296875,84.375,72.0703125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=tiger:giant_polygon}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:23,083 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:23,096 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 384
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=giant_polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-143.4375 : -8.4375, -26.89453125 : 40.60546875]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-143.4375,-26.89453125,-8.4375,40.60546875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=tiger:giant_polygon}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:23,915 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:23,929 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 384
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=giant_polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-122.34375 : -54.84375, -8.876953125 : 24.873046875]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-122.34375,-8.876953125,-54.84375,24.873046875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=tiger:giant_polygon}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:11:26,034 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:11:26,046 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Height = 384
	Width = 768
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=giant_polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c]
	MaxFeatures = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-438.75 : 641.25, -278.4375 : 261.5625]
	Env = {}
	Angle = 0.0
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-438.75,-278.4375,641.25,261.5625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=tiger:giant_polygon}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 14:13:16,043 INFO [georss.GeoRSSPoller] - destroy() invoked
2016-05-09 14:13:16,044 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2016-05-09 14:13:16,046 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2016-05-09 14:13:16,046 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2016-05-09 14:13:16,046 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2016-05-09 14:13:16,047 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2016-05-09 14:13:16,047 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2016-05-09 14:13:16,049 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2016-05-09 14:13:16,049 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2016-05-09 14:13:16,049 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2016-05-09 14:13:16,050 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2016-05-09 14:20:29,466 INFO [org.geoserver] - Loaded style 'burg'
2016-05-09 14:20:29,469 INFO [org.geoserver] - Loaded style 'capitals'
2016-05-09 14:20:29,471 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-05-09 14:20:29,472 INFO [org.geoserver] - Loaded style 'dem'
2016-05-09 14:20:29,475 INFO [org.geoserver] - Loaded style 'generic'
2016-05-09 14:20:29,479 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-05-09 14:20:29,480 INFO [org.geoserver] - Loaded style 'grass'
2016-05-09 14:20:29,481 INFO [org.geoserver] - Loaded style 'green'
2016-05-09 14:20:29,482 INFO [org.geoserver] - Loaded style 'line'
2016-05-09 14:20:29,482 INFO [org.geoserver] - Loaded style 'poi'
2016-05-09 14:20:29,485 INFO [org.geoserver] - Loaded style 'point'
2016-05-09 14:20:29,486 INFO [org.geoserver] - Loaded style 'polygon'
2016-05-09 14:20:29,487 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-05-09 14:20:29,490 INFO [org.geoserver] - Loaded style 'pophatch'
2016-05-09 14:20:29,493 INFO [org.geoserver] - Loaded style 'population'
2016-05-09 14:20:29,495 INFO [org.geoserver] - Loaded style 'rain'
2016-05-09 14:20:29,496 INFO [org.geoserver] - Loaded style 'raster'
2016-05-09 14:20:29,497 INFO [org.geoserver] - Loaded style 'restricted'
2016-05-09 14:20:29,499 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-05-09 14:20:29,501 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-05-09 14:20:29,502 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-05-09 14:20:29,504 INFO [org.geoserver] - Loaded default workspace cite
2016-05-09 14:20:29,511 INFO [org.geoserver] - Loaded workspace 'cite'
2016-05-09 14:20:29,514 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-05-09 14:20:29,516 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-05-09 14:20:29,518 INFO [org.geoserver] - Loaded workspace 'sde'
2016-05-09 14:20:29,520 INFO [org.geoserver] - Loaded workspace 'sf'
2016-05-09 14:20:29,523 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-05-09 14:20:29,528 INFO [org.geoserver] - Loaded workspace 'topp'
2016-05-09 14:20:29,752 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-05-09 14:20:29,765 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-05-09 14:20:30,615 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-05-09 14:20:30,626 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-05-09 14:20:30,732 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-05-09 14:20:30,741 INFO [org.geoserver] - Loaded store 'img_sample2', enabled
2016-05-09 14:20:30,742 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-05-09 14:20:30,908 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-05-09 14:20:30,909 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-05-09 14:20:30,913 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-05-09 14:20:30,918 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-05-09 14:20:30,919 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-05-09 14:20:30,925 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-05-09 14:20:30,926 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-05-09 14:20:31,465 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\opt\geoserver-2.9-RC1\data_dir\coverages\mosaic_sample\sample_image
2016-05-09 14:20:31,465 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/opt/geoserver-2.9-RC1/data_dir/coverages/mosaic_sample/mosaic.shp
2016-05-09 14:20:31,493 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-05-09 14:20:31,506 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-05-09 14:20:31,506 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-05-09 14:20:31,511 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-05-09 14:20:31,512 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-05-09 14:20:31,527 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-05-09 14:20:31,611 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-05-09 14:20:31,614 INFO [org.geoserver] - Loaded data store 'sf'
2016-05-09 14:20:31,657 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-05-09 14:20:31,668 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:20:31,681 INFO [org.geoserver] - Loaded layer 'archsites'
2016-05-09 14:20:31,686 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-05-09 14:20:31,687 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:20:31,690 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-05-09 14:20:31,696 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-05-09 14:20:31,706 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:20:31,709 INFO [org.geoserver] - Loaded layer 'restricted'
2016-05-09 14:20:31,713 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-05-09 14:20:31,714 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:20:31,717 INFO [org.geoserver] - Loaded layer 'roads'
2016-05-09 14:20:31,722 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-05-09 14:20:31,723 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-09 14:20:31,726 INFO [org.geoserver] - Loaded layer 'streams'
2016-05-09 14:20:31,732 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-05-09 14:20:31,733 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-05-09 14:20:31,739 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-05-09 14:20:31,740 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-05-09 14:20:31,855 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-05-09 14:20:31,865 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-05-09 14:20:31,865 INFO [org.geoserver] - Loaded data store 'nyc'
2016-05-09 14:20:31,879 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-05-09 14:20:31,880 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:20:31,882 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-05-09 14:20:31,885 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-05-09 14:20:31,886 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:20:31,890 INFO [org.geoserver] - Loaded layer 'poi'
2016-05-09 14:20:31,895 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-05-09 14:20:31,896 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:20:31,899 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-05-09 14:20:31,902 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-05-09 14:20:31,902 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-09 14:20:31,906 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-05-09 14:20:31,915 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-05-09 14:20:31,916 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-05-09 14:20:31,923 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-05-09 14:20:31,924 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-05-09 14:20:31,932 INFO [org.geoserver] - Loaded layer 'states'
2016-05-09 14:20:31,944 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-05-09 14:20:31,945 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-05-09 14:20:31,958 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-05-09 14:20:31,961 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:20:31,966 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-05-09 14:20:31,968 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-05-09 14:20:31,969 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:20:31,971 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-05-09 14:20:31,973 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-05-09 14:20:31,974 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:20:31,976 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-05-09 14:20:31,978 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-05-09 14:20:31,980 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-09 14:20:31,983 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-05-09 14:20:31,991 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-05-09 14:20:31,994 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-05-09 14:20:31,996 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-05-09 14:20:32,048 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-09 14:20:32,064 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:20:32,064 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:20:32,065 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-09 14:20:32,116 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-09 14:20:32,117 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2016-05-09 14:20:32,117 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2016-05-09 14:20:32,118 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-09 14:20:32,199 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-05-09 14:20:32,200 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2016-05-09 14:20:32,201 INFO [gwc.layer] - Loading tile layers from gwc-layers
2016-05-09 14:20:32,379 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-05-09 14:20:32,380 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2016-05-09 14:20:32,380 INFO [config.XMLConfiguration] - Initializing layers from gwc
2016-05-09 14:20:32,381 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2016-05-09 14:20:32,389 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************************
2016-05-09 14:20:32,390 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\opt\geoserver-2.9-RC1\data_dir, using it as the default prefix. ***
2016-05-09 14:20:32,391 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************************
2016-05-09 14:20:32,436 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-09 14:20:32,447 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-09 14:20:32,453 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-09 14:20:32,456 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-05-09 14:20:32,456 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-05-09 14:20:32,458 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500,0 MB
2016-05-09 14:20:32,469 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-05-09 14:20:32,514 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-05-09 14:20:32,533 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-05-09 14:20:32,544 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-05-09 14:20:32,557 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-05-09 14:20:32,730 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-05-09 14:20:32,762 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-05-09 14:20:32,771 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-05-09 14:20:32,773 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-05-09 14:20:32,868 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-05-09 14:20:32,886 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-05-09 14:20:32,886 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-05-09 14:20:32,909 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-09 14:20:33,889 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-05-09 14:20:33,889 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-05-09 14:20:33,890 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-05-09 14:20:33,966 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-05-09 14:20:33,967 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-05-09 14:20:33,974 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-05-09 14:20:34,064 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-05-09 14:20:34,065 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-05-09 14:20:34,863 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-05-09 14:20:34,864 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-05-09 14:20:34,865 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-05-09 14:20:37,382 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-05-09 14:20:37,382 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-05-09 14:20:37,431 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-05-09 14:20:37,432 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-05-09 14:20:37,718 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-05-09 14:20:37,732 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-05-09 14:20:37,837 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-05-09 14:20:37,838 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-05-09 14:21:04,005 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-05-09 14:33:14,697 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:33:14,863 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Strict = false
	Locale = null
	Format = image/png
	Rules = [null]
	Width = 20
	Height = 20
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [null]
	Scale = -1.0
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=line, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 14:33:28,008 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:33:28,570 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Strict = false
	Locale = null
	Format = image/png
	Rules = [null]
	Width = 20
	Height = 20
	FeatureType = null
	Styles = [StyleImpl[ name=style_osm_line]]
	Layers = [null]
	Scale = -1.0
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=style_osm_line, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 14:33:46,883 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = time]]
2016-05-09 14:33:50,767 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 14:33:50,813 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Strict = false
	Locale = null
	Format = image/png
	Rules = [null]
	Width = 20
	Height = 20
	FeatureType = null
	Styles = [StyleImpl[ name=style_osm_line]]
	Layers = [null]
	Scale = -1.0
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=style_osm_line, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 14:34:00,138 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:planet_osm_line
2016-05-09 15:21:10,985 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:21:10,988 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Strict = false
	Locale = null
	Format = image/png
	Rules = [null]
	Width = 20
	Height = 20
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [null]
	Scale = -1.0
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=line, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:21:17,472 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:21:17,510 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Strict = false
	Locale = null
	Format = image/png
	Rules = [null]
	Width = 20
	Height = 20
	FeatureType = null
	Styles = [StyleImpl[ name=style_osm_line]]
	Layers = [null]
	Scale = -1.0
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=style_osm_line, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:21:22,838 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:planet_osm_roads
2016-05-09 15:21:53,834 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:21:53,836 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: java.io.IOException: No such resource: generic.sld
	at org.geoserver.wms.legendgraphic.GetLegendGraphicKvpReader.read(GetLegendGraphicKvpReader.java:214)
	at org.geoserver.wms.legendgraphic.GetLegendGraphicKvpReader.read(GetLegendGraphicKvpReader.java:76)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1488)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:674)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.io.IOException: No such resource: generic.sld
	at org.geoserver.config.GeoServerDataDirectory.parsedStyle(GeoServerDataDirectory.java:1190)
	at org.geoserver.catalog.ResourcePool.getStyle(ResourcePool.java:1751)
	at org.geoserver.catalog.impl.StyleInfoImpl.getStyle(StyleInfoImpl.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:147)
	at com.sun.proxy.$Proxy6.getStyle(Unknown Source)
	at org.geoserver.wms.WMS.getStyleByName(WMS.java:251)
	at org.geoserver.wms.legendgraphic.GetLegendGraphicKvpReader.parseStyleAndRule(GetLegendGraphicKvpReader.java:437)
	at org.geoserver.wms.legendgraphic.GetLegendGraphicKvpReader.parseOptionalParameters(GetLegendGraphicKvpReader.java:369)
	at org.geoserver.wms.legendgraphic.GetLegendGraphicKvpReader.read(GetLegendGraphicKvpReader.java:201)
	... 87 more
2016-05-09 15:22:00,946 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:22:01,054 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Strict = false
	Locale = null
	Format = image/png
	Rules = [null]
	Width = 20
	Height = 20
	FeatureType = null
	Styles = [StyleImpl[ name=style_osm_polygon]]
	Layers = [null]
	Scale = -1.0
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=style_osm_polygon, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:22:08,196 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:planet_osm_polygon
2016-05-09 15:22:17,311 INFO [geoserver.web] - Connection to store img_sample2 validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader. Saving store
2016-05-09 15:23:27,474 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:osm
2016-05-09 15:23:32,879 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 15:23:32,882 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 15:23:36,427 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:23:36,728 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1485102.625 : 1853033.75, 5685041.0 : 5925996.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:900913, FORMAT=application/openlayers, BBOX=1485102.625,5685041.0,1853033.75,5925996.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:23:36,976 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:23:37,054 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering request would use 81324KB, whilst the maximum memory allowed is 65536KB
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:319)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
2016-05-09 15:26:17,606 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 15:26:17,607 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 15:26:21,298 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:21,323 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1485102.625 : 1853033.75, 5685041.0 : 5925996.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:900913, FORMAT=application/openlayers, BBOX=1485102.625,5685041.0,1853033.75,5925996.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:21,584 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:25,784 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:31,704 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:32,856 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:33,981 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:34,793 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:35,890 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1671543.4460421437 : 1686202.9265386593, 5811720.502259237 : 5821302.610604615]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1671543.4460421437,5811720.502259237,1686202.9265386593,5821302.610604615, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:36,134 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:36,515 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1675332.3872902666 : 1682662.1275385243, 5814278.276200035 : 5819069.330372724]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1675332.3872902666,5814278.276200035,1682662.1275385243,5819069.330372724, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:37,255 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1674898.138356288 : 1675862.0755503946, 5818444.202786446 : 5819408.139980553]
 layers: osm:planet_osm_line,osm:planet_osm_roads,osm:planet_osm_polygon
 styles: style_osm_line,style_osm_line,style_osm_polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1674898.138356288,5818444.202786446,1675862.0755503946,5819408.139980553, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:26:37,709 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1648809.7985534065 : 1707447.720539469, 5796373.858614447 : 5834702.291995961]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1648809.7985534065,5796373.858614447,1707447.720539469,5834702.291995961, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:38,185 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1434796.6535964631 : 1903900.0294849616, 5652451.354781468 : 5959078.821833585]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1434796.6535964631,5652451.354781468,1903900.0294849616,5959078.821833585, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:38,769 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:39,296 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1675055.613244434 : 1682385.3534926916, 5816454.292836236 : 5821245.347008925]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1675055.613244434,5816454.292836236,1682385.3534926916,5821245.347008925, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:39,587 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1554210.3384743296 : 1788762.0264185788, 5731551.468293916 : 5884865.201819975]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1554210.3384743296,5731551.468293916,1788762.0264185788,5884865.201819975, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:40,639 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:41,119 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1674234.835039551 : 1681564.5752878087, 5817866.794863244 : 5822657.849035933]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1674234.835039551,5817866.794863244,1681564.5752878087,5822657.849035933, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:42,607 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617276.6451937142 : 1734552.4891658388, 5774766.39517427 : 5851423.261937299]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617276.6451937142,5774766.39517427,1734552.4891658388,5851423.261937299, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:42,911 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:43,246 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1673414.0568346677 : 1680743.7970829254, 5818601.6776745925 : 5823392.731847282]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1673414.0568346677,5818601.6776745925,1680743.7970829254,5823392.731847282, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:44,615 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:45,112 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1675671.196898096 : 1679336.0670222251, 5820018.951667908 : 5822414.478754253]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1675671.196898096,5820018.951667908,1679336.0670222251,5822414.478754253, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:46,482 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:46,964 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1676785.451030888 : 1678617.8860929522, 5820727.588664566 : 5821925.352207738]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1676785.451030888,5820727.588664566,1678617.8860929522,5821925.352207738, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:48,167 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:48,394 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1677341.3851057068 : 1678257.6026367391, 5821081.9071628945 : 5821680.788934481]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1677341.3851057068,5821081.9071628945,1678257.6026367391,5821680.788934481, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:50,002 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:50,354 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1673452.2325651275 : 1680781.9728133853, 5818601.6776745925 : 5823392.731847282]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1673452.2325651275,5818601.6776745925,1680781.9728133853,5823392.731847282, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:51,433 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:52,003 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1669004.7599665753 : 1683664.2404630908, 5815767.129687962 : 5825349.23803334]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1669004.7599665753,5815767.129687962,1683664.2404630908,5825349.23803334, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:26:53,134 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:26:53,799 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_polygon]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@88196393]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1660109.8147694708 : 1689428.7757625019, 5810117.121579929 : 5829281.3382706875]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1660109.8147694708,5810117.121579929,1689428.7757625019,5829281.3382706875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:14,295 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id465' not rendered because it was already removed from page
2016-05-09 15:27:14,296 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id466' not rendered because it was already removed from page
2016-05-09 15:27:15,039 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id47d' not rendered because it was already removed from page
2016-05-09 15:27:15,040 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id47e' not rendered because it was already removed from page
2016-05-09 15:27:18,278 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id495' not rendered because it was already removed from page
2016-05-09 15:27:18,279 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id496' not rendered because it was already removed from page
2016-05-09 15:27:19,315 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id4ad' not rendered because it was already removed from page
2016-05-09 15:27:19,316 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id4ae' not rendered because it was already removed from page
2016-05-09 15:27:20,075 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id4c5' not rendered because it was already removed from page
2016-05-09 15:27:20,076 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id4c6' not rendered because it was already removed from page
2016-05-09 15:27:21,399 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id4dd' not rendered because it was already removed from page
2016-05-09 15:27:21,401 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id4de' not rendered because it was already removed from page
2016-05-09 15:27:26,760 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id4f5' not rendered because it was already removed from page
2016-05-09 15:27:26,760 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id4f6' not rendered because it was already removed from page
2016-05-09 15:27:28,480 INFO [gwc.layer] - Truncating TileLayer for layer group 'osm:osm' due to a change in its layers or styles
2016-05-09 15:27:28,511 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_osm does not exist or is not writable
2016-05-09 15:27:28,511 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_osm does not exist or is not writable
2016-05-09 15:27:28,519 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:osm
2016-05-09 15:27:35,208 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:35,235 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1485102.625 : 1853033.75, 5685041.0 : 5925996.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:900913, FORMAT=application/openlayers, BBOX=1485102.625,5685041.0,1853033.75,5925996.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:35,607 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:43,138 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:43,262 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1434796.6535964631 : 1903900.0294849616, 5652451.354781468 : 5959078.821833585]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1434796.6535964631,5652451.354781468,1903900.0294849616,5959078.821833585, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:44,146 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:44,864 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:45,667 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:46,617 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:48,282 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1639723.9747040037 : 1698361.8966900662, 5786371.817234011 : 5824700.250615526]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1639723.9747040037,5786371.817234011,1698361.8966900662,5824700.250615526, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:48,294 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1654421.630930979 : 1683740.59192401, 5795953.92557939 : 5815118.142270148]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1654421.630930979,5795953.92557939,1683740.59192401,5815118.142270148, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:48,463 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1661732.2833140069 : 1676391.7638105224, 5800725.89188685 : 5810308.000232228]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1661732.2833140069,5800725.89188685,1676391.7638105224,5810308.000232228, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:49,956 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:50,512 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665807.5425405772 : 1673137.282788835, 5803722.6867279345 : 5808513.740900624]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665807.5425405772,5803722.6867279345,1673137.282788835,5808513.740900624, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:51,560 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1610405.0137109726 : 1727680.8576830972, 5767131.249082334 : 5843788.115845364]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1610405.0137109726,5767131.249082334,1727680.8576830972,5843788.115845364, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:52,501 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:52,896 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668136.2620986174 : 1671801.1322227465, 5804762.9753829595 : 5807158.502469305]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668136.2620986174,5804762.9753829595,1671801.1322227465,5807158.502469305, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:53,115 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1551767.0917249103 : 1786318.7796691596, 5728802.81570082 : 5882116.549226878]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1551767.0917249103,5728802.81570082,1786318.7796691596,5882116.549226878, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:54,235 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:54,848 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1669317.323759714 : 1671149.7588217782, 5805268.803811551 : 5806466.567354723]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1669317.323759714,5805268.803811551,1671149.7588217782,5806466.567354723, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:55,565 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:55,793 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665778.9107427327 : 1673108.6509909905, 5803751.318525779 : 5808542.372698468]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665778.9107427327,5803751.318525779,1673108.6509909905,5808542.372698468, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:27:59,503 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:27:59,773 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665425.7852359805 : 1672755.5254842383, 5802004.778857249 : 5806795.833029938]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665425.7852359805,5802004.778857249,1672755.5254842383,5806795.833029938, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:01,363 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:01,934 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665664.3835513536 : 1672994.1237996113, 5799800.130423202 : 5804591.184595891]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665664.3835513536,5799800.130423202,1672994.1237996113,5804591.184595891, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:03,022 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:03,611 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1667706.7851309462 : 1671371.6552550753, 5800840.419078228 : 5803235.946164574]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1667706.7851309462,5800840.419078228,1671371.6552550753,5803235.946164574, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:07,889 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:08,426 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668751.84575228 : 1670584.2808143443, 5801432.142900353 : 5802629.906443525]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668751.84575228,5801432.142900353,1670584.2808143443,5802629.906443525, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:10,545 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:10,971 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668487.0016222158 : 1670319.4366842802, 5801047.999612603 : 5802245.763155775]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668487.0016222158,5801047.999612603,1670319.4366842802,5802245.763155775, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:11,923 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:12,480 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668126.7181660028 : 1669959.153228067, 5800849.963010844 : 5802047.726554016]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668126.7181660028,5800849.963010844,1669959.153228067,5802047.726554016, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:12,935 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:13,187 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668671.91531663 : 1669588.1328476623, 5801163.719795559 : 5801762.601567145]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668671.91531663,5801163.719795559,1669588.1328476623,5801762.601567145, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:14,449 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:14,762 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668877.1098678506 : 1669793.327398883, 5801164.912787136 : 5801763.7945587225]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668877.1098678506,5801164.912787136,1669793.327398883,5801763.7945587225, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:15,177 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:15,730 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668403.4922118355 : 1670235.9272738998, 5800866.664892919 : 5802064.428436091]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668403.4922118355,5800866.664892919,1670235.9272738998,5802064.428436091, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:16,706 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:17,320 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1667382.2914220388 : 1671047.161546168, 5800267.7831213325 : 5802663.310207678]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1667382.2914220388,5800267.7831213325,1671047.161546168,5802663.310207678, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:18,916 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:19,417 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665110.8354596882 : 1672440.575707946, 5798998.440083549 : 5803789.494256238]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665110.8354596882,5798998.440083549,1672440.575707946,5803789.494256238, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:20,863 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:21,248 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1664385.4965809544 : 1671715.2368292122, 5797051.477830105 : 5801842.532002795]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1664385.4965809544,5797051.477830105,1671715.2368292122,5801842.532002795, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:21,772 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:22,529 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1659422.6516211967 : 1674082.1321177122, 5793777.908943188 : 5803360.017288567]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1659422.6516211967,5793777.908943188,1674082.1321177122,5803360.017288567, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:24,123 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:24,786 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1661083.2958961925 : 1675742.776392708, 5797557.306258696 : 5807139.414604074]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1661083.2958961925,5797557.306258696,1675742.776392708,5807139.414604074, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:28,415 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:28,897 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665378.065572906 : 1672707.8058211638, 5799475.6367142955 : 5804266.690886985]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665378.065572906,5799475.6367142955,1672707.8058211638,5804266.690886985, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:30,988 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:31,570 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1667525.4504112627 : 1671190.3205353918, 5800434.801942094 : 5802830.32902844]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1667525.4504112627,5800434.801942094,1671190.3205353918,5802830.32902844, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:32,781 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:33,155 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668599.1428304412 : 1670431.5778925056, 5800914.3845559945 : 5802112.148099166]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668599.1428304412,5800914.3845559945,1670431.5778925056,5802112.148099166, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:34,377 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:34,878 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1669139.5680147607 : 1670055.7855457931, 5801154.175862944 : 5801753.057634531]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1669139.5680147607,5801154.175862944,1670055.7855457931,5801753.057634531, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:36,672 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:36,961 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668912.8996151565 : 1669829.1171461889, 5801142.245947175 : 5801741.127718762]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668912.8996151565,5801142.245947175,1669829.1171461889,5801741.127718762, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:39,541 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:40,061 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668451.21187491 : 1670283.6469369743, 5800835.647111922 : 5802033.410655093]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668451.21187491,5800835.647111922,1670283.6469369743,5802033.410655093, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:40,886 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:41,446 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1667525.4504112627 : 1671190.3205353918, 5800220.063458258 : 5802615.590544604]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1667525.4504112627,5800220.063458258,1671190.3205353918,5802615.590544604, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:42,381 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:42,672 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665673.9274839684 : 1673003.6677322262, 5798988.8961509345 : 5803779.950323624]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665673.9274839684,5798988.8961509345,1673003.6677322262,5803779.950323624, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:43,848 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:44,409 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1664538.1995027931 : 1671867.939751051, 5797757.72884361 : 5802548.783016299]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1664538.1995027931,5797757.72884361,1671867.939751051,5802548.783016299, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:44,493 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:45,135 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1660873.3293786643 : 1675532.8098751798, 5794598.687148072 : 5804180.79549345]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1660873.3293786643,5794598.687148072,1675532.8098751798,5804180.79549345, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:46,453 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:47,523 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1653810.819243624 : 1683129.7802366551, 5788853.23971389 : 5808017.456404648]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1653810.819243624,5788853.23971389,1683129.7802366551,5808017.456404648, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:48,778 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:50,082 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1639723.9747040037 : 1698361.8966900662, 5777362.344845528 : 5815690.778227042]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1639723.9747040037,5777362.344845528,1698361.8966900662,5815690.778227042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:54,788 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:28:56,069 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1624224.6281373752 : 1682862.5501234378, 5770338.0104409475 : 5808666.443822462]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1624224.6281373752,5770338.0104409475,1682862.5501234378,5808666.443822462, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:28:57,932 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:01,114 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1612771.9089994724 : 1671409.830985535, 5764764.353793834 : 5803092.787175349]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1612771.9089994724,5764764.353793834,1671409.830985535,5803092.787175349, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:02,902 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:06,392 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1593760.3952305538 : 1652398.3172166164, 5764688.002332916 : 5803016.43571443]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1593760.3952305538,5764688.002332916,1652398.3172166164,5803016.43571443, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:09,657 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:10,309 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:14,897 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1609565.1476408597 : 1624224.6281373752, 5783928.570484593 : 5793510.678829971]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1609565.1476408597,5783928.570484593,1624224.6281373752,5793510.678829971, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:15,098 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1604296.8968374245 : 1633615.8578304555, 5777515.047767366 : 5796679.2644581245]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1604296.8968374245,5777515.047767366,1633615.8578304555,5796679.2644581245, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:19,666 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:22,609 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1598990.4703035294 : 1628309.4312965604, 5778431.265298398 : 5797595.481989156]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1598990.4703035294,5778431.265298398,1628309.4312965604,5797595.481989156, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:24,301 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:27,635 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1577726.5884374897 : 1636364.5104235522, 5767513.006386931 : 5805841.439768446]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1577726.5884374897,5767513.006386931,1636364.5104235522,5805841.439768446, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:29,392 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:32,244 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:33,813 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1563754.2710892484 : 1622392.193075311, 5756365.693092706 : 5794694.12647422]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1563754.2710892484,5756365.693092706,1622392.193075311,5794694.12647422, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:35,865 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1600632.0267132954 : 1659269.948699358, 5768200.169535206 : 5806528.60291672]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1600632.0267132954,5768200.169535206,1659269.948699358,5806528.60291672, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:37,587 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:38,829 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1628042.2011833428 : 1686680.1231694054, 5777667.750689205 : 5815996.184070719]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1628042.2011833428,5777667.750689205,1686680.1231694054,5815996.184070719, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:40,225 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:41,373 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:41,612 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1641670.9369574473 : 1670989.8979504784, 5787975.197913317 : 5807139.414604075]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1641670.9369574473,5787975.197913317,1670989.8979504784,5807139.414604075, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:42,201 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:42,849 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1652970.9531735114 : 1682289.9141665425, 5789196.821288027 : 5808361.037978785]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1652970.9531735114,5789196.821288027,1682289.9141665425,5808361.037978785, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:43,238 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:43,328 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1661617.756122628 : 1676277.2366191435, 5795553.080409563 : 5805135.188754941]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1661617.756122628,5795553.080409563,1676277.2366191435,5805135.188754941, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:43,601 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1665931.6136645712 : 1673261.353912829, 5798731.209970332 : 5803522.264143021]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1665931.6136645712,5798731.209970332,1673261.353912829,5803522.264143021, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:44,478 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:45,107 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668088.542435543 : 1671753.412559672, 5800320.274750715 : 5802715.801837061]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668088.542435543,5800320.274750715,1671753.412559672,5802715.801837061, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:54,141 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:54,743 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1669167.006821029 : 1670999.4418830932, 5800990.736016913 : 5802188.499560085]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1669167.006821029,5800990.736016913,1670999.4418830932,5802188.499560085, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:54,905 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:55,216 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1669617.9576370837 : 1670534.175168116, 5801218.597408094 : 5801817.479179681]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1669617.9576370837,5801218.597408094,1670534.175168116,5801817.479179681, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:29:57,987 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:29:58,264 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1669838.0645830154 : 1669958.5567322786, 5801346.844002606 : 5801467.33615187]
 layers: osm:planet_osm_polygon,osm:planet_osm_roads,osm:planet_osm_line
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1669838.0645830154,5801346.844002606,1669958.5567322786,5801467.33615187, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:30:00,968 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:01,499 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1669190.8666525662 : 1671023.3017146306, 5800997.893966375 : 5802195.657509547]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1669190.8666525662,5800997.893966375,1671023.3017146306,5802195.657509547, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:02,317 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:02,823 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1668336.6846835308 : 1672001.55480766, 5800558.873066088 : 5802954.400152434]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1668336.6846835308,5800558.873066088,1672001.55480766,5802954.400152434, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:03,642 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:04,173 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1666628.3207454605 : 1673958.0609937182, 5799676.059299208 : 5804467.113471897]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1666628.3207454605,5799676.059299208,1673958.0609937182,5804467.113471897, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:05,059 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:05,656 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1663240.2246671643 : 1677899.7051636798, 5797939.063563293 : 5807521.171908671]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1663240.2246671643,5797939.063563293,1677899.7051636798,5807521.171908671, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:06,713 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:07,606 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1656444.944645342 : 1685763.905638373, 5794465.072091462 : 5813629.28878222]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1656444.944645342,5794465.072091462,1685763.905638373,5813629.28878222, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:15,714 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:17,079 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1644534.1167419227 : 1703172.0387279852, 5785761.005546656 : 5824089.438928171]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1644534.1167419227,5785761.005546656,1703172.0387279852,5824089.438928171, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:19,022 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:20,487 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1623003.0047626656 : 1681640.9267487281, 5780263.700360463 : 5818592.133741978]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1623003.0047626656,5780263.700360463,1681640.9267487281,5818592.133741978, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:22,376 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:23,506 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1635639.1715448184 : 1664958.1325378495, 5787402.561956422 : 5806566.778647181]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1635639.1715448184,5787402.561956422,1664958.1325378495,5806566.778647181, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:24,474 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:25,082 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1641460.970439919 : 1656120.4509364346, 5789960.335897221 : 5799542.444242599]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1641460.970439919,5789960.335897221,1656120.4509364346,5799542.444242599, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:26,031 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:26,291 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1644410.045617929 : 1651739.7858661867, 5791248.766800235 : 5796039.820972924]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1644410.045617929,5791248.766800235,1651739.7858661867,5796039.820972924, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:46,556 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:46,928 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1646576.5183215155 : 1650241.3884456446, 5792508.565905403 : 5794904.092991749]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1646576.5183215155,5792508.565905403,1650241.3884456446,5794904.092991749, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:49,062 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:49,500 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1644429.133483159 : 1651758.8737314167, 5791458.733317764 : 5796249.787490453]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1644429.133483159,5791458.733317764,1651758.8737314167,5796249.787490453, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:49,992 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:50,391 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1640124.8198738303 : 1654784.3003703458, 5789368.612075096 : 5798950.720420474]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1640124.8198738303,5789368.612075096,1654784.3003703458,5798950.720420474, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:51,423 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:52,662 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1631592.5441160928 : 1660911.505109124, 5785188.369589761 : 5804352.586280519]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1631592.5441160928,5785188.369589761,1660911.505109124,5804352.586280519, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:53,562 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:30:55,443 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618498.2685684238 : 1677136.1905544864, 5778813.022602996 : 5817141.4559845105]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618498.2685684238,5778813.022602996,1677136.1905544864,5817141.4559845105, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:30:56,767 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:00,829 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1592920.529160441 : 1651558.4511465034, 5768734.629761641 : 5807063.063143156]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1592920.529160441,5768734.629761641,1651558.4511465034,5807063.063143156, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:03,560 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:05,448 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:06,446 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:08,358 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:10,136 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:11,350 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:12,735 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1604487.7754897228 : 1633806.736482754, 5779194.779907592 : 5798358.99659835]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1604487.7754897228,5779194.779907592,1633806.736482754,5798358.99659835, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:20,650 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1614938.3817030592 : 1622268.121951317, 5790008.0555602955 : 5794799.109732985]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1614938.3817030592,5790008.0555602955,1622268.121951317,5794799.109732985, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:21,335 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1601319.1898615698 : 1630638.1508546008, 5775262.679670245 : 5794426.896361004]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1601319.1898615698,5775262.679670245,1630638.1508546008,5794426.896361004, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:21,629 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1608515.3150532185 : 1623174.795549734, 5781351.708678564 : 5790933.817023942]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1608515.3150532185,5781351.708678564,1623174.795549734,5790933.817023942, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:23,552 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1610099.6078672952 : 1624759.0883638107, 5784520.294306717 : 5794102.402652095]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1610099.6078672952,5784520.294306717,1624759.0883638107,5794102.402652095, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:24,262 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1610156.8714629847 : 1624816.3519595002, 5788395.130948374 : 5797977.239293752]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1610156.8714629847,5788395.130948374,1624816.3519595002,5797977.239293752, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:24,557 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:25,603 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1613277.737428063 : 1620607.4776763208, 5790637.95511288 : 5795429.009285569]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1613277.737428063,5790637.95511288,1620607.4776763208,5795429.009285569, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:27,359 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:28,408 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1612008.394390279 : 1619338.1346385367, 5790666.586910725 : 5795457.641083414]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1612008.394390279,5790666.586910725,1619338.1346385367,5795457.641083414, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:29,286 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:30,869 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1611951.1307945894 : 1619280.8710428472, 5787641.1602717955 : 5792432.214444485]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1611951.1307945894,5787641.1602717955,1619280.8710428472,5792432.214444485, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:32,741 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:33,851 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1614365.745746164 : 1621695.4859944216, 5785827.813074961 : 5790618.86724765]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1614365.745746164,5785827.813074961,1621695.4859944216,5790618.86724765, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:35,167 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:36,032 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1616374.7435616043 : 1620039.6136857334, 5787450.281619497 : 5789845.808705842]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1616374.7435616043,5787450.281619497,1620039.6136857334,5789845.808705842, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:37,257 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:37,768 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617429.348115553 : 1619261.7831776172, 5788266.287858073 : 5789464.0514012445]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617429.348115553,5788266.287858073,1619261.7831776172,5789464.0514012445, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:38,905 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:39,379 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617956.6503925272 : 1618872.8679235596, 5788674.29097736 : 5789273.172748947]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617956.6503925272,5788674.29097736,1618872.8679235596,5789273.172748947, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:40,266 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:40,513 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618220.8980268028 : 1618679.0067923188, 5788878.292537004 : 5789177.733422797]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618220.8980268028,5788878.292537004,1618679.0067923188,5789177.733422797, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:42,344 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:42,573 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618220.8980268028 : 1618679.0067923188, 5788943.9070737315 : 5789243.347959525]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618220.8980268028,5788943.9070737315,1618679.0067923188,5789243.347959525, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:45,962 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:46,380 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618372.1097091704 : 1618601.1640919286, 5789003.2584046805 : 5789152.978847577]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618372.1097091704,5789003.2584046805,1618601.1640919286,5789152.978847577, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:48,371 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:48,618 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618193.459220535 : 1618651.5679860509, 5788940.328099001 : 5789239.768984795]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618193.459220535,5788940.328099001,1618651.5679860509,5789239.768984795, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:49,530 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:49,794 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618346.1621423736 : 1618804.2709078896, 5788931.380662175 : 5789230.821547968]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618346.1621423736,5788931.380662175,1618804.2709078896,5789230.821547968, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:51,753 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:52,212 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618387.9168475638 : 1618846.0256130798, 5788906.924334849 : 5789206.365220643]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618387.9168475638,5788906.924334849,1618846.0256130798,5789206.365220643, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:53,100 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:53,387 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618341.3901760662 : 1618799.4989415822, 5788883.064503311 : 5789182.505389105]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618341.3901760662,5788883.064503311,1618799.4989415822,5789182.505389105, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:31:54,263 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:31:54,516 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618263.2492277815 : 1618721.3579932975, 5788918.257754829 : 5789217.698640622]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618263.2492277815,5788918.257754829,1618721.3579932975,5789217.698640622, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:32:09,525 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:10,070 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1618469.3385226845 : 1618529.5845973163, 5789022.346269909 : 5789082.592344541]
 layers: osm:planet_osm_polygon,osm:planet_osm_roads,osm:planet_osm_line
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1618469.3385226845,5789022.346269909,1618529.5845973163,5789082.592344541, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:32:39,610 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:39,824 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618381.6536417853 : 1618610.7080245435, 5788991.626736807 : 5789141.347179703]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618381.6536417853,5788991.626736807,1618610.7080245435,5789141.347179703, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:32:42,821 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:43,063 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618263.84572357 : 1618721.954489086, 5788888.432965407 : 5789187.873851201]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618263.84572357,5788888.432965407,1618721.954489086,5789187.873851201, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:32:44,804 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:45,274 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618027.0368955622 : 1618943.2544265946, 5788682.641918398 : 5789281.523689985]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618027.0368955622,5788682.641918398,1618943.2544265946,5789281.523689985, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:32:49,842 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:50,099 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1618616.9712303223 : 1618737.4633795854, 5789026.819988324 : 5789147.312137588]
 layers: osm:planet_osm_polygon,osm:planet_osm_roads,osm:planet_osm_line
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1618616.9712303223,5789026.819988324,1618737.4633795854,5789147.312137588, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:32:53,354 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:53,629 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618078.932029156 : 1618537.040794672, 5788955.240493712 : 5789254.681379505]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618078.932029156,5788955.240493712,1618537.040794672,5789254.681379505, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:32:53,919 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:54,131 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618104.5813480583 : 1618333.6357308165, 5789091.838029263 : 5789241.558472159]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618104.5813480583,5789091.838029263,1618333.6357308165,5789241.558472159, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:32:54,736 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:55,149 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618082.8092517806 : 1618311.8636345388, 5789139.2594444435 : 5789288.97988734]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618082.8092517806,5789139.2594444435,1618311.8636345388,5789288.97988734, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:32:56,135 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:32:56,302 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618110.3971819957 : 1618224.9243733748, 5789188.022975149 : 5789262.883196596]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618110.3971819957,5789188.022975149,1618224.9243733748,5789262.883196596, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:00,881 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:01,095 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618082.8092517806 : 1618311.8636345388, 5789139.2594444435 : 5789288.97988734]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618082.8092517806,5789139.2594444435,1618311.8636345388,5789288.97988734, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:03,663 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:03,861 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618124.1911471032 : 1618181.4547427928, 5789212.404740499 : 5789249.834851224]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618124.1911471032,5789212.404740499,1618181.4547427928,5789249.834851224, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:08,600 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:08,833 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618027.6333913507 : 1618485.7421568667, 5789041.732383034 : 5789341.173268828]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618027.6333913507,5789041.732383034,1618485.7421568667,5789341.173268828, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:09,903 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:10,210 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617890.4393600114 : 1618348.5481255273, 5789011.311097825 : 5789310.751983618]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617890.4393600114,5789011.311097825,1618348.5481255273,5789310.751983618, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:11,663 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:12,083 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617699.5607077128 : 1618157.6694732287, 5788950.468527405 : 5789249.909413198]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617699.5607077128,5788950.468527405,1618157.6694732287,5789249.909413198, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:13,378 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:13,759 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617505.6995764722 : 1618421.9171075046, 5788773.3092782395 : 5789372.191049826]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617505.6995764722,5788773.3092782395,1618421.9171075046,5789372.191049826, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:15,456 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:15,985 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617242.0484379851 : 1618158.2659690175, 5788686.220893129 : 5789285.102664716]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617242.0484379851,5788686.220893129,1618158.2659690175,5789285.102664716, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:17,122 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:17,440 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617531.9453911632 : 1618448.1629221956, 5788834.15184866 : 5789433.033620247]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617531.9453911632,5788834.15184866,1618448.1629221956,5789433.033620247, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:18,590 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:19,013 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617752.6488328835 : 1618210.7575983994, 5789009.521610459 : 5789308.962496253]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617752.6488328835,5789009.521610459,1618210.7575983994,5789308.962496253, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:26,844 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:27,086 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617877.6147005598 : 1618106.669083318, 5789125.54004131 : 5789275.2604842065]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617877.6147005598,5789125.54004131,1618106.669083318,5789275.2604842065, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:41,402 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id55c' not rendered because it was already removed from page
2016-05-09 15:33:41,402 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id55d' not rendered because it was already removed from page
2016-05-09 15:33:43,005 INFO [gwc.layer] - Truncating TileLayer for layer group 'osm:osm' due to a change in its layers or styles
2016-05-09 15:33:43,019 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_osm does not exist or is not writable
2016-05-09 15:33:43,019 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_osm does not exist or is not writable
2016-05-09 15:33:43,027 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:osm
2016-05-09 15:33:47,022 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:47,053 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1485102.625 : 1853033.75, 5685041.0 : 5925996.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:900913, FORMAT=application/openlayers, BBOX=1485102.625,5685041.0,1853033.75,5925996.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:47,347 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:54,358 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:55,626 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1434796.6535964631 : 1903900.0294849616, 5652451.354781468 : 5959078.821833585]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1434796.6535964631,5652451.354781468,1903900.0294849616,5959078.821833585, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:33:55,696 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:57,522 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:57,805 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:58,328 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:33:59,870 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:00,446 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1622354.017344851 : 1637013.4978413666, 5805077.925159252 : 5814660.03350463]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1622354.017344851,5805077.925159252,1637013.4978413666,5814660.03350463, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:00,954 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1616284.0762017628 : 1645603.0371947938, 5800153.255929953 : 5819317.472620712]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1616284.0762017628,5800153.255929953,1645603.0371947938,5819317.472620712, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:02,258 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1625388.9879163953 : 1632718.728164653, 5807540.259773902 : 5812331.313946591]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1625388.9879163953,5807540.259773902,1632718.728164653,5812331.313946591, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:03,572 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1604144.1939155855 : 1662782.115901648, 5790342.093201818 : 5828670.526583333]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1604144.1939155855,5790342.093201818,1662782.115901648,5828670.526583333, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:04,507 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:05,462 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1622621.247458069 : 1637280.7279545844, 5805154.276620172 : 5814736.38496555]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1622621.247458069,5805154.276620172,1637280.7279545844,5814736.38496555, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:06,658 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:07,842 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617047.5908109562 : 1646366.5518039872, 5800382.310312712 : 5819546.52700347]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617047.5908109562,5800382.310312712,1646366.5518039872,5819546.52700347, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:09,207 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:11,088 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1239947.7253302766 : 2178154.4771072743, 5494861.939443925 : 6108116.873548161]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1239947.7253302766,5494861.939443925,2178154.4771072743,6108116.873548161, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:12,285 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1605976.62897765 : 1664614.5509637126, 5790876.553428253 : 5829204.986809768]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1605976.62897765,5790876.553428253,1664614.5509637126,5829204.986809768, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:13,375 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:13,907 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1434185.8419091082 : 1903289.2177976067, 5652451.354781468 : 5959078.821833585]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1434185.8419091082,5652451.354781468,1903289.2177976067,5959078.821833585, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:16,754 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1583682.0023891993 : 1700957.846361324, 5771712.336737496 : 5848369.203500525]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1583682.0023891993,5771712.336737496,1700957.846361324,5848369.203500525, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:18,089 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:23,452 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1539245.4521341366 : 1773797.1400783858, 5733689.309199658 : 5887003.042725717]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1539245.4521341366,5733689.309199658,1773797.1400783858,5887003.042725717, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:25,229 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:32,729 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1445180.4522814946 : 1914283.8281699936, 5665278.400215919 : 5971905.867268036]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1445180.4522814946,5665278.400215919,1914283.8281699936,5971905.867268036, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:35,321 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:37,624 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:37,811 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1593302.2864650376 : 1654994.2668878739, 5766978.546160496 : 5828670.526583332]
 layers: osm:planet_osm_polygon,osm:planet_osm_line,osm:planet_osm_roads
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1593302.2864650376,5766978.546160496,1654994.2668878739,5828670.526583332, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:34:42,723 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:43,225 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1405477.6926034316 : 1874581.0684919306, 5643289.179471146 : 5949916.646523263]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1405477.6926034316,5643289.179471146,1874581.0684919306,5949916.646523263, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:43,553 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:45,576 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:50,131 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1594676.612761586 : 1653314.5347476485, 5768352.872457044 : 5806681.305838559]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1594676.612761586,5768352.872457044,1653314.5347476485,5806681.305838559, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:50,798 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1567648.1955961355 : 1684924.03956826, 5750486.6306019155 : 5827143.497364945]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1567648.1955961355,5750486.6306019155,1684924.03956826,5827143.497364945, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:52,468 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:53,569 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:34:54,547 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1513591.3612652342 : 1748143.0492094834, 5714754.146891659 : 5868067.880417718]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1513591.3612652342,5714754.146891659,1748143.0492094834,5868067.880417718, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:57,459 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1605289.4658293761 : 1634608.4268224072, 5778851.198333454 : 5798015.415024213]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1605289.4658293761,5778851.198333454,1634608.4268224072,5798015.415024213, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:57,549 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1610672.2438241902 : 1625331.7243207057, 5784100.361271661 : 5793682.469617039]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1610672.2438241902,5784100.361271661,1625331.7243207057,5793682.469617039, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:34:59,203 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:00,735 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1613831.2855197284 : 1621161.0257679862, 5786429.0808297 : 5791220.13500239]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1613831.2855197284,5786429.0808297,1621161.0257679862,5791220.13500239, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:01,182 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:02,142 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1616183.864909306 : 1619848.735033435, 5787803.407126249 : 5790198.934212594]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1616183.864909306,5787803.407126249,1619848.735033435,5790198.934212594, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:03,197 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:03,845 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617465.1378628588 : 1619297.5729249232, 5788485.798308216 : 5789683.561851388]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617465.1378628588,5788485.798308216,1619297.5729249232,5789683.561851388, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:04,049 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:04,381 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618072.370575483 : 1618988.5881065154, 5788818.6429581605 : 5789417.524729747]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618072.370575483,5788818.6429581605,1618988.5881065154,5789417.524729747, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:05,024 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:05,427 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617783.6666138817 : 1618699.884144914, 5788805.520050815 : 5789404.401822402]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617783.6666138817,5788805.520050815,1618699.884144914,5789404.401822402, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:07,059 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:07,683 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617391.1723850933 : 1619223.6074471576, 5788428.534712527 : 5789626.298255699]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617391.1723850933,5788428.534712527,1619223.6074471576,5789626.298255699, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:08,890 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:09,652 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617209.8376654098 : 1619042.272727474, 5788397.516931528 : 5789595.2804747]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617209.8376654098,5788397.516931528,1619042.272727474,5789595.2804747, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:09,841 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:10,456 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617250.3993790234 : 1619082.8344410877, 5788502.5001902925 : 5789700.263733464]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617250.3993790234,5788502.5001902925,1619082.8344410877,5789700.263733464, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:35:12,281 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:35:12,525 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617848.0881590326 : 1618306.1969245486, 5789032.188450419 : 5789331.629336213]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617848.0881590326,5789032.188450419,1618306.1969245486,5789331.629336213, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:36:26,499 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:36:27,028 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618072.9670712715 : 1618531.0758367875, 5788999.977677844 : 5789299.418563638]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618072.9670712715,5788999.977677844,1618531.0758367875,5789299.418563638, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:36:28,267 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:36:28,531 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618245.3543541285 : 1618703.4631196444, 5788957.029981078 : 5789256.470866871]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618245.3543541285,5788957.029981078,1618703.4631196444,5789256.470866871, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:36:31,657 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:36:31,883 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618380.1624023141 : 1618609.2167850723, 5789017.574303603 : 5789167.2947464995]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618380.1624023141,5789017.574303603,1618609.2167850723,5789167.2947464995, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:36:33,871 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:36:34,423 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617975.738257757 : 1618891.9557887893, 5788836.537831814 : 5789435.419603401]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617975.738257757,5788836.537831814,1618891.9557887893,5789435.419603401, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:36:35,452 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:36:36,042 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617436.5060650143 : 1619268.9411270786, 5788593.167550134 : 5789790.931093305]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617436.5060650143,5788593.167550134,1619268.9411270786,5789790.931093305, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:36:40,046 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:36:40,323 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617920.860645221 : 1618837.0781762535, 5788835.344840237 : 5789434.226611824]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617920.860645221,5788835.344840237,1618837.0781762535,5789434.226611824, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:36:48,452 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:36:48,842 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617231.3115137934 : 1619063.7465758577, 5788710.080724667 : 5789907.844267839]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617231.3115137934,5788710.080724667,1619063.7465758577,5789907.844267839, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:37:03,949 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:37:04,505 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618047.317752369 : 1619879.7528144333, 5788082.567155235 : 5789280.330698407]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618047.317752369,5788082.567155235,1619879.7528144333,5789280.330698407, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:37:06,179 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:37:06,550 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618431.4610401194 : 1620263.8961021837, 5787762.845412636 : 5788960.608955808]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618431.4610401194,5787762.845412636,1620263.8961021837,5788960.608955808, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:37:06,693 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:37:07,545 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617496.1556438573 : 1621161.0257679864, 5787073.296281207 : 5789468.823367553]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617496.1556438573,5787073.296281207,1621161.0257679864,5789468.823367553, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:37:10,973 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:37:11,813 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:37:11,863 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617639.314633081 : 1621304.18475721, 5787111.472011667 : 5789506.999098012]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617639.314633081,5787111.472011667,1621304.18475721,5789506.999098012, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:37:12,458 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618662.9014060313 : 1620495.3364680957, 5787676.950019102 : 5788874.713562273]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618662.9014060313,5787676.950019102,1620495.3364680957,5788874.713562273, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:37:12,702 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:37:13,138 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1619130.5541041621 : 1620046.7716351945, 5787972.811930164 : 5788571.693701751]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1619130.5541041621,5787972.811930164,1620046.7716351945,5788571.693701751, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:37:34,109 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:37:34,310 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1619466.3812330498 : 1619586.873382313, 5788235.866572862 : 5788356.358722125]
 layers: osm:planet_osm_polygon,osm:planet_osm_line,osm:planet_osm_roads
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1619466.3812330498,5788235.866572862,1619586.873382313,5788356.358722125, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:38:19,822 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:38:20,143 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1618510.1984841926 : 1620342.633546257, 5787789.091227327 : 5788986.854770498]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1618510.1984841926,5787789.091227327,1620342.633546257,5788986.854770498, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:38:22,939 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:38:23,360 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1619038.6937527435 : 1619279.6780512703, 5788267.480849649 : 5788508.465148176]
 layers: osm:planet_osm_polygon,osm:planet_osm_line,osm:planet_osm_roads
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1619038.6937527435,5788267.480849649,1619279.6780512703,5788508.465148176, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-09 15:38:25,732 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:38:26,523 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617591.5949700065 : 1621256.4650941356, 5787669.79206964 : 5790065.3191559855]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617591.5949700065,5787669.79206964,1621256.4650941356,5790065.3191559855, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:38:28,030 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:38:28,300 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:38:29,595 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1615673.2645144078 : 1623003.0047626656, 5787106.70004536 : 5791897.754218049]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1615673.2645144078,5787106.70004536,1623003.0047626656,5791897.754218049, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:38:31,228 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1611836.6036032105 : 1626496.084099726, 5785990.059929415 : 5795572.168274793]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1611836.6036032105,5785990.059929415,1626496.084099726,5795572.168274793, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:40:34,537 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 15:40:34,537 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-09 15:43:29,664 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:43:30,483 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:43:31,344 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:43:31,857 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:43:33,768 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1610271.3986543638 : 1624930.8791508793, 5782420.629131435 : 5792002.737476814]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1610271.3986543638,5782420.629131435,1624930.8791508793,5792002.737476814, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:43:34,000 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617357.768620941 : 1619190.2036830054, 5786732.100690225 : 5787929.864233397]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617357.768620941,5786732.100690225,1619190.2036830054,5787929.864233397, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:43:34,276 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1616327.0238985296 : 1619991.8940226587, 5786128.44695233 : 5788523.974038675]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1616327.0238985296,5786128.44695233,1619991.8940226587,5788523.974038675, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:43:34,308 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1614308.4821504743 : 1621638.222398732, 5784892.507678699 : 5789683.561851388]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1614308.4821504743,5784892.507678699,1621638.222398732,5789683.561851388, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:43:53,166 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:43:53,401 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1617448.4359807828 : 1619280.8710428472, 5786347.957402474 : 5787545.720945646]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1617448.4359807828,5786347.957402474,1619280.8710428472,5787545.720945646, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-09 15:43:55,080 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-09 15:43:55,267 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1618885.9908309048 : 1619126.9751294316, 5786683.188035572 : 5786924.172334099]
 layers: osm:planet_osm_polygon,osm:planet_osm_line,osm:planet_osm_roads
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1618885.9908309048,5786683.188035572,1619126.9751294316,5786924.172334099, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-10 08:51:49,358 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:51:49,387 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = application/openlayers
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1485102.625 : 1853033.75, 5685041.0 : 5925996.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:900913, FORMAT=application/openlayers, BBOX=1485102.625,5685041.0,1853033.75,5925996.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:51:49,785 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:51:55,024 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:51:58,288 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1434796.6535964631 : 1903900.0294849616, 5652451.354781468 : 5959078.821833585]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1434796.6535964631,5652451.354781468,1903900.0294849616,5959078.821833585, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:03,232 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1268045.062948598 : 2206251.8147255955, 5397132.069467154 : 6010387.00357139]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1268045.062948598,5397132.069467154,2206251.8147255955,6010387.00357139, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:04,890 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:06,030 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:07,022 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:13,975 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1586125.2491386186 : 1703401.0931107432, 5741324.455291593 : 5817981.322054623]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1586125.2491386186,5741324.455291593,1703401.0931107432,5817981.322054623, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:15,739 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:16,593 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:17,263 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:17,908 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:25,019 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1540772.4813525237 : 1775324.169296773, 5692154.114459531 : 5845467.84798559]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1540772.4813525237,5692154.114459531,1775324.169296773,5845467.84798559, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:32,336 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1450066.9457803331 : 1919170.321668832, 5593813.432795405 : 5900440.899847522]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1450066.9457803331,5593813.432795405,1919170.321668832,5900440.899847522, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:35,114 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1605728.4867296622 : 1620387.9672261777, 5783699.516101834 : 5793281.624447213]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1605728.4867296622,5783699.516101834,1620387.9672261777,5793281.624447213, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:36,195 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1596623.5750150296 : 1625942.5360080607, 5778889.374063915 : 5798053.590754673]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1596623.5750150296,5778889.374063915,1625942.5360080607,5798053.590754673, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:38,327 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1578413.7515857639 : 1637051.6735718264, 5769269.089988076 : 5807597.523369591]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1578413.7515857639,5769269.089988076,1637051.6735718264,5807597.523369591, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:38,709 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:39,860 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:40,811 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1541841.4018053946 : 1659117.2457775192, 5750028.5218364 : 5826685.388599429]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1541841.4018053946,5750028.5218364,1659117.2457775192,5826685.388599429, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:41,227 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:41,476 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1610405.0137109726 : 1617734.7539592304, 5786209.570379558 : 5791000.624552247]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1610405.0137109726,5786209.570379558,1617734.7539592304,5791000.624552247, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:41,831 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:42,137 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:43,372 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1612743.2772016276 : 1616408.1473257567, 5787464.597518419 : 5789860.124604764]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1612743.2772016276,5787464.597518419,1616408.1473257567,5789860.124604764, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:43,931 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1614518.4486680026 : 1615434.666199035, 5787809.372084133 : 5788408.25385572]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1614518.4486680026,5787809.372084133,1615434.666199035,5788408.25385572, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:44,118 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 768
	Height = 502
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1614012.620239412 : 1615845.0553014763, 5787409.719905884 : 5788607.483449056]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1614012.620239412,5787409.719905884,1615845.0553014763,5788607.483449056, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=502, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:44,278 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Buffer = 0
	Format = image/png
	Filter = null
	Filters = null
	Width = 769
	Height = 503
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	FeatureVersion = null
	SRS = EPSG:900913
	Layers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	Sld = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["WGS84 / Google Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Longitude", EAST], 
    AXIS["Latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Mercator_1SP"], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["x", EAST], 
  AXIS["y", NORTH], 
  AUTHORITY["EPSG","900913"]]
	Bbox = SRSEnvelope[1613000.9633822304 : 1616665.8335063595, 5786610.4155493835 : 5789005.942635729]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:900913, BBOX=1613000.9633822304,5786610.4155493835,1616665.8335063595,5789005.942635729, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=503, TRANSPARENT=true, LAYERS=osm:osm}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-10 08:52:52,627 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:52:52,825 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1615105.9970196085 : 1615226.4891688717, 5788019.935097449 : 5788140.427246713]
 layers: osm:planet_osm_polygon,osm:planet_osm_line,osm:planet_osm_roads
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1615105.9970196085,5788019.935097449,1615226.4891688717,5788140.427246713, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-10 08:53:38,951 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-10 08:53:39,157 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[1615170.4185647592 : 1615290.9107140223, 5788098.672541522 : 5788219.164690786]
 layers: osm:planet_osm_polygon,osm:planet_osm_line,osm:planet_osm_roads
 styles: style_osm_polygon,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:osm, REQUEST=GetFeatureInfo, SRS=EPSG:900913, BBOX=1615170.4185647592,5788098.672541522,1615290.9107140223,5788219.164690786, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:osm, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-10 08:53:59,337 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-10 08:53:59,337 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-10 10:33:23,098 INFO [georss.GeoRSSPoller] - destroy() invoked
2016-05-10 10:33:23,099 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2016-05-10 10:33:23,100 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2016-05-10 10:33:23,101 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2016-05-10 10:33:23,101 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2016-05-10 10:33:23,101 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2016-05-10 10:33:23,101 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2016-05-10 10:33:23,164 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2016-05-10 10:33:23,164 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2016-05-10 10:33:23,165 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2016-05-10 10:33:23,165 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2016-05-10 10:33:23,173 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2016-05-13 11:13:28,220 INFO [org.geoserver] - Loaded style 'burg'
2016-05-13 11:13:28,223 INFO [org.geoserver] - Loaded style 'capitals'
2016-05-13 11:13:28,227 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-05-13 11:13:28,229 INFO [org.geoserver] - Loaded style 'dem'
2016-05-13 11:13:28,232 INFO [org.geoserver] - Loaded style 'generic'
2016-05-13 11:13:28,234 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-05-13 11:13:28,236 INFO [org.geoserver] - Loaded style 'grass'
2016-05-13 11:13:28,239 INFO [org.geoserver] - Loaded style 'green'
2016-05-13 11:13:28,241 INFO [org.geoserver] - Loaded style 'line'
2016-05-13 11:13:28,244 INFO [org.geoserver] - Loaded style 'poi'
2016-05-13 11:13:28,248 INFO [org.geoserver] - Loaded style 'point'
2016-05-13 11:13:28,251 INFO [org.geoserver] - Loaded style 'polygon'
2016-05-13 11:13:28,254 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-05-13 11:13:28,257 INFO [org.geoserver] - Loaded style 'pophatch'
2016-05-13 11:13:28,260 INFO [org.geoserver] - Loaded style 'population'
2016-05-13 11:13:28,262 INFO [org.geoserver] - Loaded style 'rain'
2016-05-13 11:13:28,268 INFO [org.geoserver] - Loaded style 'raster'
2016-05-13 11:13:28,271 INFO [org.geoserver] - Loaded style 'restricted'
2016-05-13 11:13:28,274 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-05-13 11:13:28,277 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-05-13 11:13:28,280 INFO [org.geoserver] - Loaded style 'style_osm_line'
2016-05-13 11:13:28,284 INFO [org.geoserver] - Loaded style 'style_osm_polygon'
2016-05-13 11:13:28,288 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-05-13 11:13:28,290 INFO [org.geoserver] - Loaded default workspace cite
2016-05-13 11:13:28,298 INFO [org.geoserver] - Loaded workspace 'cite'
2016-05-13 11:13:28,304 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-05-13 11:13:28,309 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-05-13 11:13:28,315 INFO [org.geoserver] - Loaded workspace 'osm'
2016-05-13 11:13:28,321 INFO [org.geoserver] - Loaded workspace 'sde'
2016-05-13 11:13:28,326 INFO [org.geoserver] - Loaded workspace 'sf'
2016-05-13 11:13:28,330 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-05-13 11:13:28,334 INFO [org.geoserver] - Loaded workspace 'topp'
2016-05-13 11:13:28,537 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-05-13 11:13:28,542 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-05-13 11:13:29,628 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-05-13 11:13:29,639 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-05-13 11:13:29,775 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-05-13 11:13:29,785 INFO [org.geoserver] - Loaded store 'img_sample2', enabled
2016-05-13 11:13:29,786 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-05-13 11:13:30,022 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-05-13 11:13:30,023 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-05-13 11:13:30,028 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-05-13 11:13:30,125 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-05-13 11:13:30,125 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-05-13 11:13:30,132 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-05-13 11:13:30,133 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-05-13 11:13:30,912 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\opt\geoserver-2.9-RC1\data_dir\coverages\mosaic_sample\sample_image
2016-05-13 11:13:30,913 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/opt/geoserver-2.9-RC1/data_dir/coverages/mosaic_sample/mosaic.shp
2016-05-13 11:13:30,943 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-05-13 11:13:30,950 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-05-13 11:13:30,951 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-05-13 11:13:30,956 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-05-13 11:13:30,957 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-05-13 11:13:30,989 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-05-13 11:13:31,316 INFO [org.geoserver] - Loaded store 'OpenStreetMap', enabled
2016-05-13 11:13:31,319 INFO [org.geoserver] - Loaded data store 'OpenStreetMap'
2016-05-13 11:13:31,539 INFO [org.geoserver] - Loaded feature type 'planet_osm_line', enabled
2016-05-13 11:13:31,547 INFO [org.geoserver] - Loaded feature type 'OpenStreetMap'
2016-05-13 11:13:31,551 INFO [org.geoserver] - Loaded layer 'planet_osm_line'
2016-05-13 11:13:31,557 INFO [org.geoserver] - Loaded feature type 'planet_osm_polygon', enabled
2016-05-13 11:13:31,557 INFO [org.geoserver] - Loaded feature type 'OpenStreetMap'
2016-05-13 11:13:31,560 INFO [org.geoserver] - Loaded layer 'planet_osm_polygon'
2016-05-13 11:13:31,565 INFO [org.geoserver] - Loaded feature type 'planet_osm_roads', enabled
2016-05-13 11:13:31,566 INFO [org.geoserver] - Loaded feature type 'OpenStreetMap'
2016-05-13 11:13:31,569 INFO [org.geoserver] - Loaded layer 'planet_osm_roads'
2016-05-13 11:13:31,581 INFO [org.geoserver] - Loaded layer group 'osm'
2016-05-13 11:13:31,595 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-05-13 11:13:31,596 INFO [org.geoserver] - Loaded data store 'sf'
2016-05-13 11:13:31,642 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-05-13 11:13:31,644 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-13 11:13:31,654 INFO [org.geoserver] - Loaded layer 'archsites'
2016-05-13 11:13:31,660 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-05-13 11:13:31,661 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-13 11:13:31,665 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-05-13 11:13:31,670 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-05-13 11:13:31,671 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-13 11:13:31,676 INFO [org.geoserver] - Loaded layer 'restricted'
2016-05-13 11:13:31,681 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-05-13 11:13:31,682 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-13 11:13:31,686 INFO [org.geoserver] - Loaded layer 'roads'
2016-05-13 11:13:31,691 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-05-13 11:13:31,692 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-13 11:13:31,696 INFO [org.geoserver] - Loaded layer 'streams'
2016-05-13 11:13:31,702 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-05-13 11:13:31,703 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-05-13 11:13:31,709 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-05-13 11:13:31,710 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-05-13 11:13:31,835 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-05-13 11:13:31,847 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-05-13 11:13:31,848 INFO [org.geoserver] - Loaded data store 'nyc'
2016-05-13 11:13:31,868 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-05-13 11:13:31,869 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-13 11:13:31,873 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-05-13 11:13:31,877 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-05-13 11:13:31,877 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-13 11:13:31,881 INFO [org.geoserver] - Loaded layer 'poi'
2016-05-13 11:13:31,885 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-05-13 11:13:31,887 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-13 11:13:31,893 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-05-13 11:13:31,897 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-05-13 11:13:31,898 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-13 11:13:31,901 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-05-13 11:13:31,910 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-05-13 11:13:31,911 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-05-13 11:13:31,919 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-05-13 11:13:31,920 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-05-13 11:13:31,928 INFO [org.geoserver] - Loaded layer 'states'
2016-05-13 11:13:31,942 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-05-13 11:13:31,943 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-05-13 11:13:31,960 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-05-13 11:13:31,961 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-13 11:13:31,964 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-05-13 11:13:31,968 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-05-13 11:13:31,969 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-13 11:13:31,973 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-05-13 11:13:31,977 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-05-13 11:13:31,979 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-13 11:13:31,983 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-05-13 11:13:31,987 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-05-13 11:13:31,987 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-13 11:13:31,991 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-05-13 11:13:31,995 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-05-13 11:13:31,998 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-05-13 11:13:32,000 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-05-13 11:13:32,059 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-13 11:13:32,078 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-13 11:13:32,078 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-13 11:13:32,079 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2016-05-13 11:13:32,136 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-13 11:13:32,137 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2016-05-13 11:13:32,137 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2016-05-13 11:13:32,138 WARN [config.XMLConfiguration] - ********************************************************************************
2016-05-13 11:13:32,238 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-05-13 11:13:32,239 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2016-05-13 11:13:32,242 INFO [gwc.layer] - Loading tile layers from gwc-layers
2016-05-13 11:13:32,352 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-05-13 11:13:32,353 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2016-05-13 11:13:32,353 INFO [config.XMLConfiguration] - Initializing layers from gwc
2016-05-13 11:13:32,354 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2016-05-13 11:13:32,369 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************************
2016-05-13 11:13:32,370 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\opt\geoserver-2.9-RC1\data_dir, using it as the default prefix. ***
2016-05-13 11:13:32,370 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************************
2016-05-13 11:13:32,420 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-13 11:13:32,430 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-13 11:13:32,437 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2016-05-13 11:13:32,440 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-05-13 11:13:32,440 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-05-13 11:13:32,442 INFO [diskquota.DiskQuotaMonitor] - 26 layers attached to global quota 500,0 MB
2016-05-13 11:13:32,454 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-05-13 11:13:32,501 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-05-13 11:13:32,516 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-05-13 11:13:32,535 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-05-13 11:13:32,557 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-05-13 11:13:32,928 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-05-13 11:13:32,956 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-05-13 11:13:32,967 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-05-13 11:13:32,968 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-05-13 11:13:33,095 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-05-13 11:13:33,113 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-05-13 11:13:33,114 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-05-13 11:13:33,136 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in 'C:\opt\geoserver-2.9-RC1\data_dir\gwc'
2016-05-13 11:13:34,179 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-05-13 11:13:34,180 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-05-13 11:13:34,180 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-05-13 11:13:34,275 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-05-13 11:13:34,276 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-05-13 11:13:34,283 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-05-13 11:13:34,351 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-05-13 11:13:34,351 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-05-13 11:13:35,365 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-05-13 11:13:35,366 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-05-13 11:13:35,368 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-05-13 11:13:38,036 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-05-13 11:13:38,036 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-05-13 11:13:38,089 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-05-13 11:13:38,090 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-05-13 11:13:38,361 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-05-13 11:13:38,365 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-05-13 11:13:38,663 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-05-13 11:13:38,665 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-05-13 11:16:13,893 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-05-13 11:17:10,842 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:17:11,217 WARN [imagemosaic.catalog] - This granule catalog was not properly dispose as it still points to:ServiceInfo 
 description=Features from ShapefileDataStore
2016-05-13 11:17:17,354 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:17:17,355 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:17:46,930 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:17:46,931 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:17:51,391 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:17:51,687 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[374000.0 : 626000.0, 28000.0 : 196000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=374000.0,28000.0,626000.0,196000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:17:52,041 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:17:56,879 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:18:26,582 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:18:26,626 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=raster]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:18:54,588 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:18:54,618 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:18:59,068 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:18:59,071 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:19:08,377 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:19:08,400 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[374000.0 : 626000.0, 28000.0 : 196000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=374000.0,28000.0,626000.0,196000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:19:08,642 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:19:10,505 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:20:20,097 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:21:01,339 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:21:27,539 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:21:27,542 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=raster]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:21:36,885 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = time]]
2016-05-13 11:21:36,890 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = elevation]]
2016-05-13 11:21:39,029 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:21:39,032 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=raster]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:21:54,388 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:21:54,412 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:22:27,017 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:24:46,461 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:24:46,469 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:25:01,418 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:25:01,429 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[374000.0 : 626000.0, 28000.0 : 196000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=374000.0,28000.0,626000.0,196000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:25:01,676 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:25:03,709 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:26:08,572 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:26:56,322 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:26:56,325 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:27:00,184 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:00,199 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[374000.0 : 626000.0, 28000.0 : 196000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=374000.0,28000.0,626000.0,196000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:27:00,401 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:02,215 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:27:34,032 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:34,098 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@e2881849]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[448030.37267475744 : 509722.3530975938, 123689.36668935025 : 185381.3471121867]
 layers: osm:dmv5
 styles: raster
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=448030.37267475744,123689.36668935025,509722.3530975938,185381.3471121867, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:27:34,842 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:38,196 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:38,881 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:27:38,974 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:40,159 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:27:40,325 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:27:41,708 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:42,671 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:27:43,075 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:43,892 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:43,971 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[495062.8726010784 : 498727.7427252073, 111120.00743550193 : 113563.25418492118]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=495062.8726010784,111120.00743550193,498727.7427252073,113563.25418492118, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:27:44,121 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:27:44,643 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:44,864 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[495979.09013211064 : 497811.5251941751, 111678.32749347469 : 112899.95086818431]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=495979.09013211064,111678.32749347469,497811.5251941751,112899.95086818431, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:27:46,315 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:46,658 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:46,976 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 114 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 115 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 121 more
2016-05-13 11:27:47,189 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:27:49,059 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:49,390 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:27:50,024 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:50,053 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[495979.09013211064 : 497811.5251941751, 111675.94151032096 : 112897.56488503059]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=495979.09013211064,111675.94151032096,497811.5251941751,112897.56488503059, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:27:57,125 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:57,170 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[496450.32180497225 : 497366.5393360045, 111888.29401100292 : 112499.10569835773]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=496450.32180497225,111888.29401100292,497366.5393360045,112499.10569835773, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:27:58,825 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:27:58,850 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[496804.0438075127 : 497033.0981902708, 112047.85663440858 : 112200.55955624729]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=496804.0438075127,112047.85663440858,497033.0981902708,112200.55955624729, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:28:01,975 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:02,032 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[495034.24080323364 : 498699.1109273625, 111248.85052580334 : 113692.0972752226]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=495034.24080323364,111248.85052580334,498699.1109273625,113692.0972752226, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:28:03,176 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:03,601 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:28:09,877 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:10,140 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:28:11,892 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:12,326 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:28:14,343 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:14,399 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[495244.20732076187 : 498909.07744489075, 111115.23546919448 : 113558.48221861373]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=495244.20732076187,111115.23546919448,498909.07744489075,113558.48221861373, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:28:15,642 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:15,673 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[496289.2679420955 : 498121.70300415996, 111475.51892540767 : 112697.1423001173]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=496289.2679420955,111475.51892540767,498121.70300415996,112697.1423001173, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:28:17,225 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:17,248 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[497203.6959857624 : 497432.7503685205, 111791.36344538264 : 111944.06636722134]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=497203.6959857624,111791.36344538264,497432.7503685205,111944.06636722134, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:28:20,261 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:20,840 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:28:24,329 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:24,809 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:28:35,012 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:35,363 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:28:39,727 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:39,783 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[495592.56086120644 : 499257.4309853353, 111172.49906488399 : 113615.74581430324]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=495592.56086120644,111172.49906488399,499257.4309853353,113615.74581430324, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:28:40,977 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:28:41,316 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:30:25,255 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_dmv5 does not exist or is not writable
2016-05-13 11:32:55,096 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:32:55,118 WARN [imagemosaic.catalog] - This granule catalog was not properly dispose as it still points to:ServiceInfo 
 description=Features from ShapefileDataStore
2016-05-13 11:33:26,633 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:33:35,824 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:33:35,825 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:33:39,883 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:39,914 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[374000.0 : 626000.0, 28000.0 : 196000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=374000.0,28000.0,626000.0,196000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:33:40,131 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:43,909 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:33:46,809 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:47,882 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:48,807 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:49,698 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:50,496 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:50,719 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[532570.5277777101 : 547230.0082742256, 31151.396055095618 : 40924.383052772675]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=532570.5277777101,31151.396055095618,547230.0082742256,40924.383052772675, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:33:51,410 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:33:52,686 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:33:52,770 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:33:52,860 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:33:54,442 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:54,466 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[536874.8413870386 : 544204.5816352963, 32373.01942980525 : 37259.51292864377]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=536874.8413870386,32373.01942980525,544204.5816352963,37259.51292864377, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:33:56,560 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:56,655 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:33:58,676 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:33:59,045 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:34:02,226 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:34:02,237 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@e2881849]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[537323.4062199398 : 545034.9037727943, 29738.894028087616 : 37450.39158094217]
 layers: osm:dmv5
 styles: raster
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=537323.4062199398,29738.894028087616,545034.9037727943,37450.39158094217, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:34:03,583 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:34:03,596 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@e2881849]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[537705.1635245365 : 545416.661077391, 32716.601003942345 : 40428.0985567969]
 layers: osm:dmv5
 styles: raster
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=537705.1635245365,32716.601003942345,545416.661077391,40428.0985567969, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:34:04,394 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:34:04,976 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:34:05,230 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:34:05,245 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@e2881849]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[534078.4691308672 : 549501.4642365763, 29548.01537578922 : 44971.01048149833]
 layers: osm:dmv5
 styles: raster
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=osm:dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=534078.4691308672,29548.01537578922,549501.4642365763,44971.01048149833, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=osm:dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:34:33,664 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:34:33,675 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[374000.0 : 626000.0, 28000.0 : 196000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=374000.0,28000.0,626000.0,196000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:34:34,019 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:34:36,191 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Error rendering coverage on the fast path
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:346)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:261)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:131)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:505)
	at org.geoserver.wms.GetMap.run(GetMap.java:249)
	at org.geoserver.wms.GetMap.run(GetMap.java:119)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:320)
	at sun.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:62)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:36)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:74)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy64.getMap(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.geoserver.platform.ServiceException: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:1083)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:344)
	... 112 more
Caused by: org.geotools.coverage.processing.CoverageProcessingException: java.lang.UnsupportedOperationException: Not implemented
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:343)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:46)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter.getOutput(StyleVisitorCoverageProcessingNodeAdapter.java:141)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.symbolize(GridCoverageRenderer.java:472)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:974)
	at org.geotools.renderer.lite.gridcoverage2d.GridCoverageRenderer.renderImage(GridCoverageRenderer.java:768)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.directRasterRender(RenderedImageMapOutputFormat.java:975)
	... 113 more
Caused by: java.lang.UnsupportedOperationException: Not implemented
	at org.jaitools.imageutils.ROIGeometry.getAsRectangleList(ROIGeometry.java:488)
	at com.sun.media.jai.opimage.ExtremaOpImage.accumulateStatistics(ExtremaOpImage.java:176)
	at javax.media.jai.StatisticsOpImage.getProperty(StatisticsOpImage.java:292)
	at com.sun.media.jai.opimage.ExtremaOpImage.getProperty(ExtremaOpImage.java:100)
	at javax.media.jai.RenderedOp$1.getProperty(RenderedOp.java:1808)
	at javax.media.jai.PropertyEnvironment.getProperty(PropertyEnvironment.java:197)
	at javax.media.jai.PropertySourceImpl.getProperty(PropertySourceImpl.java:277)
	at javax.media.jai.WritablePropertySourceImpl.getProperty(WritablePropertySourceImpl.java:130)
	at javax.media.jai.RenderedOp.getProperty(RenderedOp.java:1982)
	at org.geotools.image.ImageWorker.getComputedProperty(ImageWorker.java:961)
	at org.geotools.image.ImageWorker.getExtremas(ImageWorker.java:1015)
	at org.geotools.image.ImageWorker.rescaleToBytes(ImageWorker.java:1319)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:131)
	at org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.execute(RasterSymbolizerHelper.java:58)
	at org.geotools.renderer.lite.gridcoverage2d.StyleVisitorCoverageProcessingNodeAdapter$1.execute(StyleVisitorCoverageProcessingNodeAdapter.java:102)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.checkExecuted(BaseCoverageProcessingNode.java:238)
	at org.geotools.renderer.lite.gridcoverage2d.BaseCoverageProcessingNode.getOutput(BaseCoverageProcessingNode.java:341)
	... 119 more
2016-05-13 11:34:54,260 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:34:54,262 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:35:21,612 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:35:21,614 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=raster]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:35:40,987 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:35:42,083 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=dem]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=dem, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 11:36:21,457 INFO [gwc.layer] - Truncating default style for layer osm:dmv5, as it changed from raster to dem
2016-05-13 11:36:21,459 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:36:21,485 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:39:01,911 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:dmv5
2016-05-13 11:39:04,650 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:39:04,651 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:39:15,985 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:39:15,987 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:39:19,352 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:19,364 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[432500.0 : 440000.0, 40000.0 : 50000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=432500.0,40000.0,440000.0,50000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:19,599 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:19,690 INFO [geoserver.wms] - 
Request: getMap
	Height = 769
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[430755.85464175424 : 441750.4650141409, 37679.445963700215 : 52338.92646021581]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=430755.85464175424,37679.445963700215,441750.4650141409,52338.92646021581, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=769, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:22,829 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:22,860 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[421841.82157941983 : 443831.04232419323, 30693.287289579508 : 60012.24828261068]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=421841.82157941983,30693.287289579508,443831.04232419323,60012.24828261068, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:25,058 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:25,103 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[404051.9311852108 : 448030.3726747576, 16797.32140225744 : 75435.24338831978]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=404051.9311852108,16797.32140225744,448030.3726747576,75435.24338831978, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:27,720 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:27,815 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[368472.1503967928 : 456429.03337588627, -11147.313294225394 : 106128.53067789928]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=368472.1503967928,-11147.313294225394,456429.03337588627,106128.53067789928, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:30,676 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:30,893 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[295938.26252340834 : 471852.0284815954, -64746.038859610504 : 169805.64908463886]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=295938.26252340834,-64746.038859610504,471852.0284815954,169805.64908463886, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:33,482 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:33,677 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[147205.61665251068 : 499033.1485688847, -169194.83739728405 : 299908.5384912147]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=147205.61665251068,-169194.83739728405,499033.1485688847,299908.5384912147, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:35,712 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:36,068 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[-152702.921838704 : 550952.1419940441, -376259.9994105667 : 561946.7523664308]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=-152702.921838704,-376259.9994105667,550952.1419940441,561946.7523664308, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:38,251 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:38,457 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[111167.72709857655 : 814822.7909313247, -384811.36303353414 : 553395.3887434633]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=111167.72709857655,-384811.36303353414,814822.7909313247,553395.3887434633, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:40,042 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:40,199 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[-276086.88268437685 : 1131223.2449811194, -852693.1155473233 : 1023720.3880066717]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=-276086.88268437685,-852693.1155473233,1131223.2449811194,1023720.3880066717, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:41,692 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:41,850 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[111167.72709857655 : 814822.7909313247, -383589.7396588245 : 554617.012118173]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=111167.72709857655,-383589.7396588245,814822.7909313247,554617.012118173, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:42,309 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:42,947 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[304795.03199005325 : 656622.5639064272, -149038.05171457512 : 320065.3241739236]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=304795.03199005325,-149038.05171457512,656622.5639064272,320065.3241739236, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:44,041 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:44,702 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[281584.1878705702 : 633411.7197869442, -148427.2400272203 : 320676.1358612784]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=281584.1878705702,-148427.2400272203,633411.7197869442,320676.1358612784, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:48,247 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:50,591 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[376259.9994105667 : 552173.7653687537, -26570.308399934496 : 207981.37954431487]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=376259.9994105667,-26570.308399934496,552173.7653687537,207981.37954431487, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:39:55,206 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:39:55,878 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[420696.5496656296 : 508653.43264472304, 37106.81000680507 : 154382.65397892974]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=420696.5496656296,37106.81000680507,508653.43264472304,154382.65397892974, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:01,477 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:01,516 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[446045.2346908544 : 490023.6761804012, 82383.22633198081 : 141021.14831804315]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=446045.2346908544,82383.22633198081,490023.6761804012,141021.14831804315, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:02,976 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:03,004 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458795.9286643862 : 480785.1494091596, 105250.48887732674 : 134569.4498703579]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=458795.9286643862,105250.48887732674,480785.1494091596,134569.4498703579, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:05,529 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:05,550 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[465171.27565115213 : 476165.88602353877, 116684.12014999971 : 131343.6006465153]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=465171.27565115213,116684.12014999971,476165.88602353877,131343.6006465153, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:07,659 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:07,677 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[468358.94914453506 : 473856.2543307284, 122400.9357863362 : 129730.67603459398]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=468358.94914453506,122400.9357863362,473856.2543307284,129730.67603459398, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:09,778 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:09,798 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[470749.70426457224 : 472124.0305611206, 126683.7755472811 : 128516.21060934554]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=470749.70426457224,126683.7755472811,472124.0305611206,128516.21060934554, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:11,781 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:11,807 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[471253.1467100092 : 472627.47300655756, 127430.5882743985 : 129263.02333646294]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=471253.1467100092,127430.5882743985,472627.47300655756,129263.02333646294, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:13,080 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:13,098 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[471741.6767607354 : 472085.2583348725, 128004.4172228705 : 128462.52598838661]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=471741.6767607354,128004.4172228705,472085.2583348725,128462.52598838661, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:24,430 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:24,450 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[471575.25443576276 : 472262.41758403694, 127809.95959584153 : 128726.17712687375]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=471575.25443576276,127809.95959584153,472262.41758403694,128726.17712687375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:25,410 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:25,429 INFO [geoserver.wms] - 
Request: getMap
	Height = 769
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[470577.9134775037 : 473326.5660706004, 126643.21383366767 : 130308.08395779658]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=470577.9134775037,126643.21383366767,473326.5660706004,130308.08395779658, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=769, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:26,894 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:26,915 INFO [geoserver.wms] - 
Request: getMap
	Height = 769
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[468588.0035272931 : 474085.3087134864, 125092.32478374334 : 132422.06503200115]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=468588.0035272931,125092.32478374334,474085.3087134864,132422.06503200115, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=769, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:28,628 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:28,648 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[464598.639694257 : 475593.25006664364, 121990.54668389467 : 136650.02718041025]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=464598.639694257,121990.54668389467,475593.25006664364,136650.02718041025, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:31,113 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:31,150 INFO [geoserver.wms] - 
Request: getMap
	Height = 769
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[473531.76062182116 : 484526.3709942078, 121589.70151406807 : 136249.18201058367]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=473531.76062182116,121589.70151406807,484526.3709942078,136249.18201058367, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=769, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:34,063 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:34,089 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[465476.6814948295 : 487465.9022396029, 114985.30014454413 : 144304.2611375753]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=465476.6814948295,114985.30014454413,487465.9022396029,144304.2611375753, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:37,072 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:37,113 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[472004.7314034341 : 493993.9521482075, 121017.06555717293 : 150336.0265502041]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=472004.7314034341,121017.06555717293,493993.9521482075,150336.0265502041, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:39,552 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:39,571 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455245.5857316363 : 477234.8064764097, 115939.69340603604 : 145258.6543990672]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=455245.5857316363,115939.69340603604,477234.8064764097,145258.6543990672, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:41,714 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:41,742 INFO [geoserver.wms] - 
Request: getMap
	Height = 769
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[454443.89539198315 : 476433.11613675655, 104067.04123307677 : 133386.00222610796]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=454443.89539198315,104067.04123307677,476433.11613675655,133386.00222610796, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=769, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:42,146 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:42,207 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[440318.875121903 : 484297.3166114498, 84750.12162048073 : 143388.04360654307]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=440318.875121903,84750.12162048073,484297.3166114498,143388.04360654307, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:44,515 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:44,584 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[406037.069169114 : 493993.95214820746, 60317.65412628809 : 177593.49809841276]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=406037.069169114,60317.65412628809,493993.95214820746,177593.49809841276, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:48,954 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:49,022 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 576
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[411534.3743553073 : 499491.2573344008, 49323.043753901395 : 166598.88772602606]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=411534.3743553073,49323.043753901395,499491.2573344008,166598.88772602606, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=576, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:40:49,747 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:40:49,775 INFO [geoserver.wms] - 
Request: getMap
	Height = 768
	Width = 577
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=dem]]
	Layers = [org.geoserver.wms.MapLayerInfo@e2881849]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[451618.8913379671 : 473608.1120827405, 85857.21780381133 : 115176.17879684249]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=451618.8913379671,85857.21780381133,473608.1120827405,115176.17879684249, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=577, HEIGHT=768, TRANSPARENT=true, LAYERS=osm:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:43:03,660 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_dmv5 does not exist or is not writable
2016-05-13 11:44:17,874 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:E24
2016-05-13 11:44:24,914 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:44:24,916 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 11:44:28,485 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:28,519 INFO [geoserver.wms] - 
Request: getMap
	Height = 496
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[373233.00627273385 : 625984.4841624469, 30608.05450145062 : 194133.05219832156]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=373233.00627273385,30608.05450145062,625984.4841624469,194133.05219832156, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=496, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:28,744 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:28,773 INFO [geoserver.wms] - 
Request: getMap
	Height = 496
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[265092.27231199015 : 734195.6482004889, -39091.94799070823 : 263870.6489372805]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=265092.27231199015,-39091.94799070823,734195.6482004889,263870.6489372805, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=496, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:30,539 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:30,556 INFO [geoserver.wms] - 
Request: getMap
	Height = 496
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[368014.04163127666 : 602565.729575526, 33289.23696083747 : 184770.53542483185]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=368014.04163127666,33289.23696083747,602565.729575526,184770.53542483185, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=496, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:31,239 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:31,274 INFO [geoserver.wms] - 
Request: getMap
	Height = 497
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[445129.0171598222 : 503766.93914588453, 87575.12567449675 : 125445.45029049536]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=445129.0171598222,87575.12567449675,503766.93914588453,125445.45029049536, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=497, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:32,239 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:33,157 INFO [geoserver.wms] - 
Request: getMap
	Height = 496
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[464350.49744626903 : 479009.97794278467, 101146.59785291158 : 110614.17900691122]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=464350.49744626903,101146.59785291158,479009.97794278467,110614.17900691122, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=496, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:33,523 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:33,609 INFO [geoserver.wms] - 
Request: getMap
	Height = 497
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457956.06259427336 : 487275.0235873045, 96622.77379343996 : 115557.93610143926]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457956.06259427336,96622.77379343996,487275.0235873045,115557.93610143926, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=497, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:34,806 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:34,840 INFO [geoserver.wms] - 
Request: getMap
	Height = 497
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[443296.5820977578 : 501934.5040838201, 89560.2636583999 : 127430.5882743985]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=443296.5820977578,89560.2636583999,501934.5040838201,127430.5882743985, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=497, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:45,923 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:46,012 INFO [geoserver.wms] - 
Request: getMap
	Height = 497
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457497.9538287572 : 486816.9148217884, 95553.85334056904 : 114489.01564856834]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457497.9538287572,95553.85334056904,486816.9148217884,114489.01564856834, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=497, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:47,289 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:47,506 INFO [geoserver.wms] - 
Request: getMap
	Height = 496
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[466202.02037356334 : 480861.500870079, 98894.2297557907 : 108361.81090979034]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=466202.02037356334,98894.2297557907,480861.500870079,108361.81090979034, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=496, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:48,090 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:48,575 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 11:44:48,815 INFO [geoserver.wms] - 
Request: getMap
	Height = 497
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[472730.070282168 : 476394.94040629687, 101399.51206720692 : 103766.40735570683]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=472730.070282168,101399.51206720692,476394.94040629687,103766.40735570683, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=497, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:44:48,821 INFO [geoserver.wms] - 
Request: getMap
	Height = 497
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [org.geoserver.wms.MapLayerInfo@8b60c52c]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[470554.05364596646 : 477883.7938942242, 100564.4179634015 : 105298.20854040133]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=470554.05364596646,100564.4179634015,477883.7938942242,105298.20854040133, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=497, TRANSPARENT=true, LAYERS=osm:E24}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 11:59:51,676 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_E24 does not exist or is not writable
2016-05-13 13:01:47,035 INFO [geoserver.gwc] - Saving GeoSeverTileLayer dmv:E24_color
2016-05-13 13:02:38,237 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:02:38,239 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=raster]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:03:42,985 INFO [geoserver.gwc] - Saving GeoSeverTileLayer dmv:E24_hillshade
2016-05-13 13:04:18,914 INFO [geoserver.gwc] - Saving GeoSeverTileLayer dmv:E24_slope_color
2016-05-13 13:07:24,258 INFO [geoserver.gwc] - Saving GeoSeverTileLayer dmv:dmv5
2016-05-13 13:07:28,388 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 13:07:28,389 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 13:07:33,342 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:33,370 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455000.0 : 477500.0, 100000.0 : 115000.0]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=455000.0,100000.0,477500.0,115000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:33,587 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:34,068 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[451580.71560750745 : 480899.6766005386, 97729.86997677057 : 117275.84397212468]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=451580.71560750745,97729.86997677057,480899.6766005386,117275.84397212468, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:36,027 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:37,385 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460342.04574800306 : 475001.5262445187, 101719.2338098067 : 111492.22080748377]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=460342.04574800306,101719.2338098067,475001.5262445187,111492.22080748377, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:38,443 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:40,025 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[464465.02463764814 : 471794.7648859059, 103647.10819802035 : 108533.60169685888]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=464465.02463764814,103647.10819802035,471794.7648859059,108533.60169685888, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:41,546 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:43,218 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[462241.28833837196 : 469571.0285866297, 104019.32157000218 : 108905.81506884072]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=462241.28833837196,104019.32157000218,469571.0285866297,108905.81506884072, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:49,731 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:49,864 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[465347.83840452804 : 466311.7755986349, 105570.21061992651 : 106534.14781403332]
 layers: dmv:E24_color,dmv:E24_hillshade,dmv:E24_slope_color
 styles: raster,dmv_opacity,dmv_opacity
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=dmv:dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=465347.83840452804,105570.21061992651,466311.7755986349,106534.14781403332, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=dmv:dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:07:50,228 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:51,522 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458643.2257425475 : 473302.7062390631, 101986.46392302445 : 111759.45092070149]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=458643.2257425475,101986.46392302445,473302.7062390631,111759.45092070149, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:52,903 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:54,259 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456371.7697801968 : 471031.2502767124, 104105.21696353646 : 113878.20396121353]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=456371.7697801968,104105.21696353646,471031.2502767124,113878.20396121353, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:56,361 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:57,919 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459492.6357452753 : 466822.37599353306, 105842.21269945172 : 110728.70619829025]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=459492.6357452753,105842.21269945172,466822.37599353306,110728.70619829025, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:07:59,028 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:07:59,618 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[461053.0687278146 : 464717.9388519435, 106710.71056740936 : 109153.95731682862]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=461053.0687278146,106710.71056740936,464717.9388519435,109153.95731682862, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:00,980 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:01,592 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[461742.6178592425 : 463575.0529213069, 107109.16975408222 : 108330.79312879185]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=461742.6178592425,107109.16975408222,463575.0529213069,108330.79312879185, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:03,162 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:03,543 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[462361.7804876353 : 463277.99801866757, 107372.82089256936 : 107983.63257992417]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=462361.7804876353,107372.82089256936,463277.99801866757,107983.63257992417, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:05,614 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:06,251 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[461706.8281119365 : 463539.26317400095, 107109.16975408222 : 108330.79312879185]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=461706.8281119365,107109.16975408222,463539.26317400095,108330.79312879185, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:07,628 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:08,215 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460256.15035446885 : 463921.0204785977, 106572.32354449303 : 109015.57029391229]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=460256.15035446885,106572.32354449303,463921.0204785977,109015.57029391229, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:09,128 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:10,691 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457354.79483953345 : 464684.5350877912, 105479.5432600848 : 110366.03675892334]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457354.79483953345,105479.5432600848,464684.5350877912,110366.03675892334, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:12,029 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:12,934 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[451447.1005508986 : 466106.5810474142, 103570.75673710101 : 113343.74373477805]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=451447.1005508986,103570.75673710101,466106.5810474142,113343.74373477805, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:14,897 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:16,043 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[452802.3389822171 : 467461.8194787327, 103341.70235434294 : 113114.68935202001]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=452802.3389822171,103341.70235434294,467461.8194787327,113114.68935202001, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:17,945 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:18,548 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:19,560 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456911.0019729397 : 460575.8720970686, 107922.79000950407 : 110366.03675892332]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=456911.0019729397,107922.79000950407,460575.8720970686,110366.03675892332, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:19,701 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455541.4476426988 : 462871.1878909566, 106395.76079111702 : 111282.25428995556]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=455541.4476426988,106395.76079111702,462871.1878909566,111282.25428995556, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:20,588 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:20,975 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457684.06051474815 : 459516.4955768126, 108676.76068608266 : 109898.38406079229]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457684.06051474815,108676.76068608266,459516.4955768126,109898.38406079229, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:25,122 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:25,826 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457202.0919176947 : 459034.52697975916, 108662.44478716029 : 109884.06816186992]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457202.0919176947,108662.44478716029,459034.52697975916,109884.06816186992, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:34,731 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:35,117 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457542.0945171012 : 458458.31204813346, 109026.30721810408 : 109637.11890545889]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457542.0945171012,109026.30721810408,458458.31204813346,109637.11890545889, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:36,263 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:36,538 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457712.0958168045 : 458170.2045823206, 109208.23843357597 : 109513.64427725338]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457712.0958168045,109208.23843357597,458170.2045823206,109513.64427725338, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:38,048 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:38,429 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457544.48050025495 : 458460.69803128723, 109021.53525179661 : 109632.34693915142]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457544.48050025495,109021.53525179661,458460.69803128723,109632.34693915142, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:39,466 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:39,857 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457206.8638840022 : 459039.29894606664, 108648.12888823792 : 109869.75226294754]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457206.8638840022,108648.12888823792,459039.29894606664,109869.75226294754, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:08:40,383 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:08:41,263 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456534.0166346504 : 460198.8867587793, 107903.70214427423 : 110346.94889369348]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=456534.0166346504,107903.70214427423,460198.8867587793,110346.94889369348, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:09,427 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:10,481 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457359.56680584094 : 461024.4369299698, 108089.80883026514 : 110533.0555796844]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457359.56680584094,108089.80883026514,461024.4369299698,110533.0555796844, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:30,024 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:30,426 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458480.9788880939 : 460313.41395015834, 108318.8632130232 : 109540.48658773283]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=458480.9788880939,108318.8632130232,460313.41395015834,109540.48658773283, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:38,634 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:39,467 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457011.21326539636 : 460676.08338952524, 107937.10590842644 : 110380.3526578457]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457011.21326539636,107937.10590842644,460676.08338952524,110380.3526578457, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:40,573 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:41,656 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457264.1274796917 : 460928.9976038206, 108123.21259441736 : 110566.45934383661]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457264.1274796917,108123.21259441736,460928.9976038206,110566.45934383661, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:43,016 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:43,891 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[454338.91213321907 : 461668.65238147683, 107426.50551352827 : 112312.99901236681]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=454338.91213321907,107426.50551352827,461668.65238147683,112312.99901236681, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:46,186 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:46,851 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:47,100 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457130.51242308284 : 460795.3825472117, 107755.77118874299 : 110199.01793816224]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457130.51242308284,107755.77118874299,460795.3825472117,110199.01793816224, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:47,289 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458526.3125680148 : 460358.7476300792, 107920.40402635034 : 109142.02740105997]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=458526.3125680148,107920.40402635034,460358.7476300792,109142.02740105997, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:48,266 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:48,647 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459203.931783674 : 460120.1493147063, 107999.14147042342 : 108609.95315777823]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=459203.931783674,107999.14147042342,460120.1493147063,108609.95315777823, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:50,250 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:50,634 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458786.3847317713 : 460618.81979383575, 107920.40402635034 : 109142.02740105997]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=458786.3847317713,107920.40402635034,460618.81979383575,109142.02740105997, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:51,522 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:52,310 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:52,387 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457956.06259427336 : 461620.93271840224, 107765.31512135791 : 110208.56187077716]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=457956.06259427336,107765.31512135791,461620.93271840224,110208.56187077716, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:53,427 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456285.87438666256 : 463615.6146349203, 107455.13731137302 : 112341.63081021156]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=456285.87438666256,107455.13731137302,463615.6146349203,112341.63081021156, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:09:54,734 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:09:55,614 INFO [geoserver.wms] - 
Request: getMap
	Height = 512
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[452153.3515644026 : 466812.8320609182, 106510.28798249605 : 116283.2749801731]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=452153.3515644026,106510.28798249605,466812.8320609182,116283.2749801731, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=512, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:10:22,398 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:10:23,452 INFO [geoserver.wms] - 
Request: getMap
	Height = 513
	Width = 769
	Format = image/jpeg
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity]]
	Layers = [org.geoserver.wms.MapLayerInfo@47b44744, org.geoserver.wms.MapLayerInfo@b9c0a0bb, org.geoserver.wms.MapLayerInfo@6ec9098]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[453336.7992086525 : 467996.27970516816, 105804.03696899203 : 115577.0239666691]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:3912, BBOX=453336.7992086525,105804.03696899203,467996.27970516816,115577.0239666691, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=513, TRANSPARENT=true, LAYERS=dmv:dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:11:19,436 WARN [geoserver.web] - Error adding/modifying layer group.
java.lang.IllegalArgumentException: Layer group within a workspace (dmv) can not contain resources from other workspace: osm
	at org.geoserver.catalog.impl.CatalogImpl.checkLayerGroupResourceIsInWorkspace(CatalogImpl.java:928)
	at org.geoserver.catalog.impl.CatalogImpl.checkLayerGroupResourceIsInWorkspace(CatalogImpl.java:899)
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:857)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:938)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1316)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:740)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:446)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.save(LocalWorkspaceCatalog.java:218)
	at org.geoserver.web.data.layergroup.LayerGroupEditPage.doSaveInternal(LayerGroupEditPage.java:299)
	at org.geoserver.web.publish.PublishedConfigurationPage.doSave(PublishedConfigurationPage.java:255)
	at org.geoserver.web.publish.PublishedConfigurationPage$6.onSubmit(PublishedConfigurationPage.java:241)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1307)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:974)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:795)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:708)
	at sun.reflect.GeneratedMethodAccessor330.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:865)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:158)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:205)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:157)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
2016-05-13 13:12:27,331 INFO [geoserver.web] - Connection to store dmv_slope validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader. Saving store
2016-05-13 13:12:27,354 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:E24_slope_color
2016-05-13 13:12:27,363 INFO [geoserver.gwc] - Renaming GWC TileLayer 'dmv:E24_slope_color' as 'osm:E24_slope_color'
2016-05-13 13:12:35,938 INFO [geoserver.web] - Connection to store dmv5_color validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader. Saving store
2016-05-13 13:12:35,968 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:E24_color
2016-05-13 13:12:35,978 INFO [geoserver.gwc] - Renaming GWC TileLayer 'dmv:E24_color' as 'osm:E24_color'
2016-05-13 13:12:43,063 INFO [geoserver.web] - Connection to store dmv5_hillshade validated. Got a org.geoserver.catalog.CoverageDimensionCustomizerReader. Saving store
2016-05-13 13:12:43,091 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:E24_hillshade
2016-05-13 13:12:43,100 INFO [geoserver.gwc] - Renaming GWC TileLayer 'dmv:E24_hillshade' as 'osm:E24_hillshade'
2016-05-13 13:13:00,703 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:13:00,705 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=raster]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:13:14,553 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:13:14,555 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Height = 20
	Locale = null
	Width = 20
	Format = image/png
	Strict = false
	Rules = [null]
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Styles = [StyleImpl[ name=raster]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:13:46,232 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\dmv_dmv5 does not exist or is not writable
2016-05-13 13:13:53,985 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_E24_color does not exist or is not writable
2016-05-13 13:14:03,203 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_E24_hillshade does not exist or is not writable
2016-05-13 13:14:08,040 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\osm_E24_slope_color does not exist or is not writable
2016-05-13 13:14:25,814 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:E24_color
2016-05-13 13:14:36,011 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:E24_hillshade
2016-05-13 13:14:56,121 INFO [geoserver.gwc] - Saving GeoSeverTileLayer osm:E24_slope_color
2016-05-13 13:15:58,289 INFO [geoserver.gwc] - Saving GeoSeverTileLayer dmv5
2016-05-13 13:16:00,843 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 13:16:00,845 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 13:16:07,400 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:07,534 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[370488.0578638146 : 629237.0657669065, 28638.996413794346 : 196616.18197145872]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=370488.0578638146,28638.996413794346,629237.0657669065,196616.18197145872, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:16:07,729 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:15,837 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:16,935 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:18,191 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[496413.3390660895 : 498245.7741281539, 106464.95430257518 : 107653.1739131326]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=496413.3390660895,106464.95430257518,498245.7741281539,107653.1739131326, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:16:20,063 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[482808.4631235224 : 512127.42411655356, 97882.57289860927 : 116894.08666752791]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=482808.4631235224,97882.57289860927,512127.42411655356,116894.08666752791, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:16:20,143 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:20,791 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[495506.66546767217 : 499171.53559180105, 105894.70432883377 : 108271.1435499486]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=495506.66546767217,105894.70432883377,499171.53559180105,108271.1435499486, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:16:21,771 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:22,656 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[493688.5463045301 : 501018.2865527879, 104754.20438135095 : 109507.08282358063]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=493688.5463045301,104754.20438135095,501018.2865527879,109507.08282358063, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:16:22,907 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_polygon], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@88196393, org.geoserver.wms.MapLayerInfo@bf19f801, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[265092.27231199015 : 734195.6482004889, -39702.75967806304 : 264481.46062463534]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=265092.27231199015,-39702.75967806304,734195.6482004889,264481.46062463534, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:16:33,887 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:33,888 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer dmv:dmv5
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1340)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:239)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:84)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1488)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:674)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
2016-05-13 13:16:34,538 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:34,540 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer dmv:dmv5
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1340)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:239)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:84)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1488)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:674)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
2016-05-13 13:16:35,702 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:16:35,703 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer dmv:dmv5
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1340)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:239)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:84)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1488)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:674)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:744)
2016-05-13 13:17:06,149 INFO [gwc.layer] - Truncating TileLayer for layer group 'dmv5' due to a change in its layers or styles
2016-05-13 13:17:06,276 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\dmv5 does not exist or is not writable
2016-05-13 13:17:06,276 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\dmv5 does not exist or is not writable
2016-05-13 13:17:06,282 INFO [geoserver.gwc] - Saving GeoSeverTileLayer dmv5
2016-05-13 13:17:07,951 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 13:17:07,952 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2016-05-13 13:17:12,640 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:12,655 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[370488.0578638146 : 629237.0657669065, 28638.996413794346 : 196616.18197145872]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=370488.0578638146,28638.996413794346,629237.0657669065,196616.18197145872, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:12,859 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:14,278 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[265092.27231199015 : 734195.6482004889, -39702.75967806304 : 264481.46062463534]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=265092.27231199015,-39702.75967806304,734195.6482004889,264481.46062463534, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:15,687 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:16,408 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:17,009 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460017.55203909584 : 518655.47402515815, 76351.460919352 : 114374.4884571893]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=460017.55203909584,76351.460919352,518655.47402515815,114374.4884571893, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:17,683 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[376565.4052542441 : 611117.0931984935, 26570.30839993451 : 178662.4185512837]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=376565.4052542441,26570.30839993451,611117.0931984935,178662.4185512837, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:21,470 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:21,914 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[433752.64948283875 : 492390.57146890106, 92690.67355609333 : 130713.70109393063]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=433752.64948283875,92690.67355609333,492390.57146890106,130713.70109393063, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:22,870 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:23,440 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[450206.38931095914 : 479525.3503039903, 99218.72346469793 : 118230.23723361657]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=450206.38931095914,99218.72346469793,479525.3503039903,118230.23723361657, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:24,338 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:25,943 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458356.9077640999 : 473016.3882606155, 102482.74841900023 : 111988.50530345955]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458356.9077640999,102482.74841900023,473016.3882606155,111988.50530345955, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:26,955 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:28,566 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[462069.4975513035 : 469399.23779956123, 104506.06213336306 : 109258.94057559273]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=462069.4975513035,104506.06213336306,469399.23779956123,109258.94057559273, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:42,634 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:44,625 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460656.99552429543 : 467986.7357725532, 104744.66044873603 : 109497.5388909657]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=460656.99552429543,104744.66044873603,467986.7357725532,109497.5388909657, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:45,139 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:45,782 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[462952.31131818343 : 466617.1814423123, 105608.38635038621 : 107984.82557150103]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=462952.31131818343,105608.38635038621,466617.1814423123,107984.82557150103, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:49,459 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:51,444 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460571.10013076116 : 467900.8403790189, 104620.58932474208 : 109373.46776697175]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=460571.10013076116,104620.58932474208,467900.8403790189,109373.46776697175, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:54,540 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:55,965 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455951.8367451403 : 470611.31724165595, 101986.46392302445 : 111492.22080748377]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=455951.8367451403,101986.46392302445,470611.31724165595,111492.22080748377, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:17:57,468 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:58,549 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:17:58,947 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[452439.6695428501 : 467099.15003936575, 104582.41359428242 : 114088.17047874174]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=452439.6695428501,104582.41359428242,467099.15003936575,114088.17047874174, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:00,205 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456371.7697801968 : 463701.51002845453, 106481.65618465129 : 111234.53462688097]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=456371.7697801968,106481.65618465129,463701.51002845453,111234.53462688097, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:01,222 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:01,836 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458299.64416841045 : 461964.51429253933, 107436.0494461432 : 109812.48866725802]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458299.64416841045,107436.0494461432,461964.51429253933,109812.48866725802, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:05,140 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:05,544 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:05,999 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457984.6943921181 : 461649.56451624696, 106462.56831942147 : 108839.00754053629]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457984.6943921181,106462.56831942147,461649.56451624696,108839.00754053629, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:06,346 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458891.3679905354 : 460723.80305259983, 107154.50343400308 : 108342.72304456051]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458891.3679905354,107154.50343400308,460723.80305259983,108342.72304456051, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:07,956 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:08,811 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458061.04585303745 : 461725.9159771663, 106495.97208357368 : 108872.4113046885]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458061.04585303745,106495.97208357368,461725.9159771663,108872.4113046885, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:11,840 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:12,340 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:12,605 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458741.05105185043 : 460573.48611391487, 106682.07876956458 : 107870.29838012201]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458741.05105185043,106682.07876956458,460573.48611391487,107870.29838012201, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:12,833 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459079.86065968004 : 459996.0781907123, 106775.13211256005 : 107369.24191783876]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=459079.86065968004,106775.13211256005,459996.0781907123,107369.24191783876, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:19,009 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:19,905 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458843.6483274608 : 460676.08338952524, 106612.88525810643 : 107801.10486866385]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458843.6483274608,106612.88525810643,460676.08338952524,107801.10486866385, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:20,906 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:21,536 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458356.90776409995 : 462021.7778882288, 106281.233599738 : 108657.67282085282]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458356.90776409995,106281.233599738,462021.7778882288,108657.67282085282, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:23,089 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:24,765 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457106.65259154554 : 464436.3928398033, 105641.79011453841 : 110394.66855676808]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457106.65259154554,105641.79011453841,464436.3928398033,110394.66855676808, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:31,527 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:33,098 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455312.3932599408 : 462642.13350819855, 105699.05371022793 : 110451.93215245761]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=455312.3932599408,105699.05371022793,462642.13350819855,110451.93215245761, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:42,025 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:42,907 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457106.65259154554 : 460771.5227156744, 106591.41140972286 : 108967.85063083768]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457106.65259154554,106591.41140972286,460771.5227156744,108967.85063083768, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:43,958 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:44,588 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458039.57200465386 : 459872.0070667183, 107044.74820893152 : 108232.96781948894]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458039.57200465386,107044.74820893152,459872.0070667183,108232.96781948894, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:47,475 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:48,421 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457311.8471427663 : 460976.71726689517, 106691.62270217952 : 109068.06192329434]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457311.8471427663,106691.62270217952,460976.71726689517,109068.06192329434, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:52,149 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:53,737 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455713.23842976737 : 463042.97867802513, 105994.91562129042 : 110747.7940635201]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=455713.23842976737,105994.91562129042,463042.97867802513,110747.7940635201, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:18:58,381 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:18:59,565 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[450244.56504141877 : 464904.0455379344, 104544.23786382274 : 114049.99474828206]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=450244.56504141877,104544.23786382274,464904.0455379344,114049.99474828206, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:19:03,451 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:19:04,588 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[450607.2344807857 : 465266.7149773013, 107063.83607416136 : 116569.59295862068]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=450607.2344807857,107063.83607416136,465266.7149773013,116569.59295862068, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:19:06,609 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:19:06,928 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[440127.99646960467 : 469446.9574626358, 104372.4470767542 : 123383.96084567283]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=440127.99646960467,104372.4470767542,469446.9574626358,123383.96084567283, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:19:10,615 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:19:11,416 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[445930.7074994754 : 475249.66849250655, 100974.80706584304 : 119986.32083476167]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=445930.7074994754,100974.80706584304,475249.66849250655,119986.32083476167, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:19:13,761 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:19:14,336 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[448679.36009257205 : 477998.3210856032, 98836.96616010118 : 117848.47992901981]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=448679.36009257205,98836.96616010118,477998.3210856032,117848.47992901981, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:19:39,752 INFO [gwc.layer] - Truncating TileLayer for layer group 'dmv5' due to a change in its layers or styles
2016-05-13 13:19:39,864 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\dmv5 does not exist or is not writable
2016-05-13 13:19:39,864 INFO [file.FileBlobStore] - C:\opt\geoserver-2.9-RC1\data_dir\gwc\dmv5 does not exist or is not writable
2016-05-13 13:19:39,870 INFO [geoserver.gwc] - Saving GeoSeverTileLayer dmv5
2016-05-13 13:20:58,778 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:20:58,809 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Time = []
	Filter = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[370488.0578638146 : 629237.0657669065, 28638.996413794346 : 196616.18197145872]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	RawKvp = {REQUEST=GetMap, SRS=EPSG:3912, FORMAT=application/openlayers, BBOX=370488.0578638146,28638.996413794346,629237.0657669065,196616.18197145872, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:20:59,191 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:02,353 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[265092.27231199015 : 734195.6482004889, -39702.75967806304 : 264481.46062463534]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=265092.27231199015,-39702.75967806304,734195.6482004889,264481.46062463534, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:03,531 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:04,232 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:04,918 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:07,172 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:07,593 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[445281.7200816609 : 503919.6420677232, 86429.85376070646 : 124452.88129854377]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=445281.7200816609,86429.85376070646,503919.6420677232,124452.88129854377, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:08,292 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[427415.4782265326 : 544691.3221986572, 68105.503140062 : 144151.5582157366]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=427415.4782265326,68105.503140062,544691.3221986572,144151.5582157366, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:09,372 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[386032.98640824377 : 620584.6743524931, 32983.831117160065 : 185075.94126850925]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=386032.98640824377,32983.831117160065,620584.6743524931,185075.94126850925, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:12,107 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[453985.786626467 : 483304.7476194982, 97386.2884026335 : 116397.80217155213]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=453985.786626467,97386.2884026335,483304.7476194982,116397.80217155213, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:13,677 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:15,598 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:17,104 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:19,446 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[450206.38931095914 : 479525.3503039903, 99295.07492561729 : 118306.58869453592]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=450206.38931095914,99295.07492561729,479525.3503039903,118306.58869453592, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:20,447 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456829.87854571285 : 471489.3590422285, 105632.2461819235 : 115138.00306638282]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=456829.87854571285,105632.2461819235,471489.3590422285,115138.00306638282, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:21,958 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[448068.54840521724 : 477387.5093982484, 101814.6731359559 : 120826.18690487454]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=448068.54840521724,101814.6731359559,477387.5093982484,120826.18690487454, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:22,100 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:23,308 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[461277.35114426515 : 468607.0913925229, 107636.47203105649 : 112389.35047328616]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=461277.35114426515,107636.47203105649,468607.0913925229,112389.35047328616, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:25,846 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:27,974 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460886.0499070535 : 468215.79015531123, 105594.07045146382 : 110346.9488936935]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=460886.0499070535,105594.07045146382,468215.79015531123,110346.9488936935, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:29,739 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:31,717 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459855.30518464226 : 467185.0454329, 106892.0452870928 : 111644.92372932247]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=459855.30518464226,106892.0452870928,467185.0454329,111644.92372932247, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:34,690 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:36,951 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458166.0291118016 : 465495.76936005935, 108314.09124671573 : 113066.9696889454]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458166.0291118016,108314.09124671573,465495.76936005935,113066.9696889454, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:37,114 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:38,468 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459974.60434232873 : 463639.4744664576, 109545.2585540403 : 111921.69777515512]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=459974.60434232873,109545.2585540403,463639.4744664576,111921.69777515512, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:40,614 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:40,974 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460554.39824868506 : 462386.8333107495, 110225.26375285327 : 111413.48336341069]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=460554.39824868506,110225.26375285327,462386.8333107495,111413.48336341069, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:43,199 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:44,103 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459893.4809151019 : 463558.35103923077, 109526.17068881045 : 111902.60990992528]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=459893.4809151019,109526.17068881045,463558.35103923077,111902.60990992528, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:53,835 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:55,801 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[458108.76551611203 : 465438.5057643698, 108275.91551625606 : 113028.79395848574]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=458108.76551611203,108275.91551625606,465438.5057643698,113028.79395848574, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:21:57,587 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:21:59,122 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455245.5857316364 : 462575.32597989414, 107817.80675073995 : 112570.68519296963]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=455245.5857316364,107817.80675073995,462575.32597989414,112570.68519296963, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:00,267 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:01,040 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:01,954 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[454653.8619095114 : 461983.60215776914, 107521.94483967745 : 112274.82328190713]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=454653.8619095114,107521.94483967745,461983.60215776914,112274.82328190713, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:02,221 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456429.0333758863 : 460093.9035000152, 108471.5661348619 : 110848.00535597673]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=456429.0333758863,108471.5661348619,460093.9035000152,110848.00535597673, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:03,134 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:04,001 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457316.61910907377 : 459149.0541711382, 108946.37678245411 : 110134.59639301154]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457316.61910907377,108946.37678245411,459149.0541711382,110134.59639301154, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:05,453 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:05,728 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457868.9742091622 : 458785.19174019445, 109137.2554347525 : 109731.36524003121]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457868.9742091622,109137.2554347525,458785.19174019445,109731.36524003121, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:07,103 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:08,072 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457350.022873226 : 459182.4579352904, 108941.60481614666 : 110129.82442670409]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457350.022873226,108941.60481614666,459182.4579352904,110129.82442670409, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:09,573 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:10,281 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457225.951749232 : 459058.38681129646, 108946.37678245411 : 110134.59639301154]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457225.951749232,108946.37678245411,459058.38681129646,110134.59639301154, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:12,011 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:12,225 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[457981.1154173875 : 458222.09971591417, 109651.43480438125 : 109892.41910290797]
 layers: osm:E24_color,osm:E24_hillshade,osm:E24_slope_color,osm:planet_osm_roads,osm:planet_osm_line
 styles: raster,dmv_opacity,dmv_opacity,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=457981.1154173875,109651.43480438125,458222.09971591417,109892.41910290797, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:22:28,668 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:28,851 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[457809.32463031897 : 458050.3089288456, 109424.76640477692 : 109665.75070330364]
 layers: osm:E24_color,osm:E24_hillshade,osm:E24_slope_color,osm:planet_osm_roads,osm:planet_osm_line
 styles: raster,dmv_opacity,dmv_opacity,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=457809.32463031897,109424.76640477692,458050.3089288456,109665.75070330364, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:22:41,335 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:41,545 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[457537.32255079376 : 457778.3068493204, 109350.8009270113 : 109591.78522553801]
 layers: osm:E24_color,osm:E24_hillshade,osm:E24_slope_color,osm:planet_osm_roads,osm:planet_osm_line
 styles: raster,dmv_opacity,dmv_opacity,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=457537.32255079376,109350.8009270113,457778.3068493204,109591.78522553801, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:22:56,137 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:56,891 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456214.2948920506 : 459879.1650161795, 108528.82973055143 : 110905.26895166625]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=456214.2948920506,108528.82973055143,459879.1650161795,110905.26895166625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:22:57,853 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:22:58,848 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[454186.20921138034 : 461515.9494596381, 107684.19169413108 : 112437.07013636075]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=454186.20921138034,107684.19169413108,461515.9494596381,112437.07013636075, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:23:01,605 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:23:03,388 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[449729.19268021313 : 464388.6731767288, 105040.52235979853 : 114546.27924425785]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=449729.19268021313,105040.52235979853,464388.6731767288,114546.27924425785, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:23:06,287 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:23:09,876 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[440700.6324264998 : 470019.59341953095, 102120.07897963331 : 121131.59274855195]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=440700.6324264998,102120.07897963331,470019.59341953095,121131.59274855195, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:23:12,604 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:23:13,389 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[415122.8930185169 : 473760.8150045792, 97271.76121125446 : 135294.78874909176]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=415122.8930185169,97271.76121125446,473760.8150045792,135294.78874909176, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:23:15,508 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:23:16,543 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[430545.888124226 : 489183.8101102883, 96050.13783654482 : 134073.1653743821]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=430545.888124226,96050.13783654482,489183.8101102883,134073.1653743821, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:23:16,879 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:23:18,009 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:23:21,022 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457975.1504595032 : 472634.6309560188, 104696.94078566144 : 114202.69767012076]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457975.1504595032,104696.94078566144,472634.6309560188,114202.69767012076, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:23:21,503 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[448832.0630144108 : 478151.02400744194, 101814.6731359559 : 120826.18690487454]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=448832.0630144108,101814.6731359559,478151.02400744194,120826.18690487454, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:24:54,282 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:24:56,402 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[452153.3515644026 : 466812.8320609182, 105498.63112531464 : 115004.38800977396]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=452153.3515644026,105498.63112531464,466812.8320609182,115004.38800977396, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:24:58,563 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:24:59,062 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:00,186 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459893.4809151019 : 463558.35103923077, 109392.55563220159 : 111768.99485331641]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=459893.4809151019,109392.55563220159,463558.35103923077,111768.99485331641, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:25:00,784 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457316.61910907377 : 464646.35935733153, 108094.5807965726 : 112847.45923880227]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457316.61910907377,108094.5807965726,464646.35935733153,112847.45923880227, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:25:01,408 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:02,053 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[461165.2099360399 : 462997.6449981043, 110043.9290331698 : 111232.14864372723]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=461165.2099360399,110043.9290331698,462997.6449981043,111232.14864372723, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:25:05,421 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:05,586 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[462039.6727618818 : 462280.65706040844, 110667.86362787012 : 110908.84792639683]
 layers: osm:E24_color,osm:E24_hillshade,osm:E24_slope_color,osm:planet_osm_roads,osm:planet_osm_line
 styles: raster,dmv_opacity,dmv_opacity,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=462039.6727618818,110667.86362787012,462280.65706040844,110908.84792639683, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:25:17,261 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:17,892 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[460776.2946819819 : 464441.1648061108, 109779.08490310582 : 112155.52412422064]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=460776.2946819819,109779.08490310582,464441.1648061108,112155.52412422064, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:25:19,111 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:20,979 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[459988.9202412511 : 467318.6604895089, 109249.3966429778 : 114002.27508520747]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=459988.9202412511,109249.3966429778,467318.6604895089,114002.27508520747, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:25:21,334 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:21,523 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[462121.9891806854 : 463085.9263747923, 110580.77524275899 : 111544.7124368658]
 layers: osm:E24_color,osm:E24_hillshade,osm:E24_slope_color,osm:planet_osm_roads,osm:planet_osm_line
 styles: raster,dmv_opacity,dmv_opacity,style_osm_line,style_osm_line
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=dmv5, REQUEST=GetFeatureInfo, SRS=EPSG:3912, BBOX=462121.9891806854,110580.77524275899,463085.9263747923,111544.7124368658, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=dmv5, TRANSPARENT=true, FEATURE_COUNT=50}
	Get = false
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = null
2016-05-13 13:25:25,763 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:27,372 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457755.64000936004 : 465085.3802576178, 109201.6769799032 : 113954.55542213288]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457755.64000936004,109201.6769799032,465085.3802576178,113954.55542213288, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:25:28,810 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:30,479 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[457488.4098961423 : 464818.1501444001, 108094.5807965726 : 112847.45923880227]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=457488.4098961423,108094.5807965726,464818.1501444001,112847.45923880227, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:25:33,849 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:25:35,825 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[456390.85764542664 : 463720.5978936844, 107254.71472645973 : 112007.5931686894]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=456390.85764542664,107254.71472645973,463720.5978936844,112007.5931686894, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:26:00,462 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:26:02,249 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[453909.43516554765 : 468568.9156620633, 103666.19606325019 : 113171.9529477095]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=453909.43516554765,103666.19606325019,468568.9156620633,113171.9529477095, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:26:03,636 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:26:04,919 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-13 13:26:06,175 INFO [geoserver.wms] - 
Request: getMap
	Height = 498
	Width = 769
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[452993.21763451543 : 467652.69813103107, 105498.63112531464 : 115004.38800977396]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=452993.21763451543,105498.63112531464,467652.69813103107,115004.38800977396, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=498, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
2016-05-13 13:26:07,019 INFO [geoserver.wms] - 
Request: getMap
	Height = 499
	Width = 768
	Format = image/png
	Buffer = 0
	Time = []
	Filter = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	Filters = null
	Tiled = false
	Palette = null
	SRS = EPSG:3912
	FeatureVersion = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=dmv_opacity], StyleImpl[ name=dmv_opacity], StyleImpl[ name=style_osm_line], StyleImpl[ name=style_osm_line]]
	Layers = [org.geoserver.wms.MapLayerInfo@4e0f47c8, org.geoserver.wms.MapLayerInfo@21dfbf3f, org.geoserver.wms.MapLayerInfo@e3be1e1c, org.geoserver.wms.MapLayerInfo@2eb0599a, org.geoserver.wms.MapLayerInfo@bf19f801]
	MaxFeatures = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Crs = PROJCS["MGI 1901 / Slovene National Grid", 
  GEOGCS["MGI 1901", 
    DATUM["MGI 1901", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[551.7, 162.9, 467.9, 6.04, 1.96, -11.38, -4.82], 
      AUTHORITY["EPSG","1031"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","3906"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9999], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", -5000000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3912"]]
	Bbox = SRSEnvelope[455961.3806777553 : 463291.12092601304, 107560.12057013714 : 112312.99901236681]
	Env = {}
	Angle = 0.0
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Sld = null
	ValidateSchema = false
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3912, BBOX=455961.3806777553,107560.12057013714,463291.12092601304,112312.99901236681, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=499, TRANSPARENT=true, LAYERS=dmv5}
	Get = true
	BaseUrl = http://localhost:8080/geoserver/
	RequestCharset = UTF-8
